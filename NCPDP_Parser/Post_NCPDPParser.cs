using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;
using System.IO;
using NCPDP_Parser.Model;

namespace NCPDP_Parser
{
    public class Post_NCPDPParser
    {
        public delegate void logMessage(string s);
        private event logMessage logProcessing;
        public string FileName { get; set; }
        public Post_NCPDPParser(string fileName)
        {
            FileName = fileName;
        }
        public int ParseDetail()
        {
            Regex oRxParse_Header = new Regex(@"PA(?<Version_Number>.{2})(?<Sender_ID>.{24})(?<Batch_Number>.{7})(?<Creation_Date>.{8})(?<Creation_Time>.{4})(?<Receiver_ID>.{24})(?<ReportStartDate>.{8})(?<ReportEndDate>.{8})(?<FileType>.{1})(?<Transmission_Action>.{1})(?<Submission_Number>.{2})");
            StringBuilder sb = new StringBuilder();
            sb.Append("DE(?<Record_Indicator>.{1})");
            sb.Append("(?<Eligible_Coverage_Code>.{3})");
            sb.Append("(?<User_Benefit_ID>.{10})");
            sb.Append("(?<User_Coverage_ID>.{10})");
            sb.Append("(?<Eligibility_Group_ID>.{15})");
            sb.Append("(?<Line_Of_Business_Code>.{6})");
            sb.Append("(?<Insurance_Code>.{20})");
            sb.Append("(?<Client_Assigned_Location_Code>.{20})");
            sb.Append("(?<Client_Pass_Through>.{200})");
            sb.Append("(?<Card_Holder_ID>.{20})");
            sb.Append("(?<CH_Last_Name>.{35})");
            sb.Append("(?<CH_First_Name>.{35})");
            sb.Append("(?<CH_Middle_Initial>.{1})");
            sb.Append("(?<CH_Name_Suffix>.{10})");
            sb.Append("(?<CH_Address_Line_1>.{40})");
            sb.Append("(?<CH_Address_Line_2>.{40})");
            sb.Append("(?<CH_City>.{30})");
            sb.Append("(?<CH_State>.{2})");
            sb.Append("(?<CH_Zip>.{15})");
            sb.Append("(?<CH_Entity_Country_Code>.{2})");
            sb.Append("(?<CH_Date_Of_Birth>.{8})");
            sb.Append("(?<CH_Gender_Code>.{1})");
            sb.Append("(?<CH_Medicare_Plan_Code>.{1})");
            sb.Append("(?<CH_Payroll_Class>.{1})");
            sb.Append("(?<Patient_ID_Qualifier>.{2})");
            sb.Append("(?<Patient_ID>.{20})");
            sb.Append("(?<PT_Last_Name>.{35})");
            sb.Append("(?<PT_First_Name>.{35})");
            sb.Append("(?<PT_Middle_Initial>.{1})");
            sb.Append("(?<PT_Name_Suffix>.{10})");
            sb.Append("(?<PT_Address_Line_1>.{40})");
            sb.Append("(?<PT_Address_Line_2>.{40})");
            sb.Append("(?<PT_City>.{30})");
            sb.Append("(?<PT_State>.{2})");
            sb.Append("(?<PT_Zip>.{15})");
            sb.Append("(?<PT_Country_Code>.{2})");
            sb.Append("(?<PT_Date_Of_Birth>.{8})");
            sb.Append("(?<PT_Gender_Code>.{1})");
            sb.Append("(?<Eligibility_Relationship_Code>.{2})");
            sb.Append("(?<PT_Age>.{3})");
            sb.Append("(?<PT_Person_Code>.{3})");
            sb.Append("(?<Patient_Relationship_Code>.{1})");
            sb.Append("(?<Eligibility_Clarification_Code>.{1})");
            sb.Append("(?<Facility_ID>.{10})");
            sb.Append("(?<Group_ID>.{15})");
            sb.Append("(?<Carrier_Number>.{9})");
            sb.Append("(?<Benefit_ID>.{15})");
            sb.Append("(?<Contract_Number>.{8})");
            sb.Append("(?<Benefit_Type>.{1})");
            sb.Append("(?<Member_Submitted_Claim_Program_Code>.{1})");
            sb.Append("(?<NonPos_Claim_Override_Code1>.{1})");
            sb.Append("(?<NonPos_Claim_Override_Code2>.{1})");
            sb.Append("(?<NonPos_Claim_Override_Code3>.{1})");
            sb.Append("(?<Copay_Modifier_ID>.{10})");
            sb.Append("(?<Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Preferred_Alternative_File_ID>.{10})");
            sb.Append("(?<Other_Coverage_Code>.{2})");
            sb.Append("(?<Plan_Benefit_Code>.{2})");
            sb.Append("(?<Plan_Type>.{4})");
            sb.Append("(?<Service_Provider_ID_Qualifier>.{2})");
            sb.Append("(?<Service_Provider_ID>.{15})");
            sb.Append("(?<Service_Provider_ID_Qualifier_Alternate>.{2})");
            sb.Append("(?<Service_Provider_ID_Alternate>.{15})");
            sb.Append("(?<Service_Provider_Chain_Code>.{7})");
            sb.Append("(?<Pharmacy_Name>.{70})");
            sb.Append("(?<PH_Address_Line_1>.{40})");
            sb.Append("(?<PH_Address_Line_2>.{40})");
            sb.Append("(?<PH_City>.{30})");
            sb.Append("(?<PH_State>.{2})");
            sb.Append("(?<PH_Zip>.{15})");
            sb.Append("(?<Service_Provider_Country_Code1>.{3})");
            sb.Append("(?<Service_Provider_Country_Code2>.{2})");
            sb.Append("(?<PH_Telephone_Number>.{10})");
            sb.Append("(?<PH_Telephone_Number_Extension>.{8})");
            sb.Append("(?<Pharmacy_Dispenser_Type_Qualifier>.{1})");
            sb.Append("(?<Pharmacy_Dispenser_Type>.{2})");
            sb.Append("(?<Pharmacy_Class_Code_Qualifier>.{1})");
            sb.Append("(?<Pharmacy_Class_Code>.{1})");
            sb.Append("(?<In_Network_Indicator>.{1})");
            sb.Append("(?<In_Network_Reimbursement_ID>.{10})");
            sb.Append("(?<Prescriber_ID_Qualifier>.{2})");
            sb.Append("(?<Prescriber_ID>.{15})");
            sb.Append("(?<Prescriber_ID_Qualifier_Alternate>.{2})");
            sb.Append("(?<Prescriber_ID_Alternate>.{15})");
            sb.Append("(?<Prescriber_Taxonomy>.{10})");
            sb.Append("(?<Prescriber_Certification_Status>.{2})");
            sb.Append("(?<PS_Last_Name>.{35})");
            sb.Append("(?<PS_First_Name>.{35})");
            sb.Append("(?<PS_Telephone_Number>.{10})");
            sb.Append("(?<PS_Telephone_Number_Extension>.{8})");
            sb.Append("(?<Primary_Care_Provider_ID_Qualifier>.{2})");
            sb.Append("(?<Primary_Care_Provider_ID>.{15})");
            sb.Append("(?<PC_Last_Name>.{35})");
            sb.Append("(?<PC_First_Name>.{35})");
            sb.Append("(?<Record_Status_Code>.{1})");
            sb.Append("(?<Claim_Media_Type>.{1})");
            sb.Append("(?<Processor_Payment_Clarification_Code>.{2})");
            sb.Append("(?<Prescription_Service_Reference_Number_Qualifier>.{1})");
            sb.Append("(?<Prescription_Service_Reference_Number>.{12})");
            sb.Append("(?<Product_Service_ID_Qualifier>.{2})");
            sb.Append("(?<Product_Service_ID>.{19})");
            sb.Append("(?<Date_Of_Service>.{8})");
            sb.Append("(?<Adjudication_Date>.{8})");
            sb.Append("(?<Adjudication_Time>.{6})");
            sb.Append("(?<Original_Claim_Received_Date>.{8})");
            sb.Append("(?<Claim_Sequence_Number>.{5})");
            sb.Append("(?<Billing_Cycle_End_Date>.{8})");
            sb.Append("(?<Communication_Type_Indicator>.{2})");
            sb.Append("(?<Place_Of_Service>.{2})");
            sb.Append("(?<Patient_Residence>.{2})");
            sb.Append("(?<Prescription_Origin_Code>.{1})");
            sb.Append("(?<Member_Submitted_Claim_Payment_Release_Date>.{8})");
            sb.Append("(?<Claim_Date_Received_Inthemail>.{8})");
            sb.Append("(?<Internal_Mail_Order_Prescription_Service_Reference_Number>.{15})");
            sb.Append("(?<Version_Number_Of_Claim>.{2})");
            sb.Append("(?<Check_Date>.{8})");
            sb.Append("(?<Payment_ID>.{30})");
            sb.Append("(?<Associated_Prescription_Service_Reference_Number>.{12})");
            sb.Append("(?<Associated_Prescription_Service_Date>.{8})");
            sb.Append("(?<Quantity_Dispensed>.{10})");
            sb.Append("(?<Fill_Number>.{2})");
            sb.Append("(?<Days_Supply>.{3})");
            sb.Append("(?<Date_Prescription_Written>.{8})");
            sb.Append("(?<Dispense_As_Written_Prodcut_Sellection_Code>.{1})");
            sb.Append("(?<Number_Of_Refills_Authorized>.{2})");
            sb.Append("(?<Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Unit_Of_Measure>.{2})");
            sb.Append("(?<Level_Of_Service>.{2})");
            sb.Append("(?<Dispensing_Status>.{1})");
            sb.Append("(?<Quantity_Intended_Dispense>.{10})");
            sb.Append("(?<Quantity_Prescribed>.{10})");
            sb.Append("(?<Days_Supply_Intended_Dispense>.{3})");
            sb.Append("(?<Fill_Number_Calculated>.{2})");
            sb.Append("(?<Compound_Code>.{1})");
            sb.Append("(?<Compound_Type>.{2})");
            sb.Append("(?<Compound_Route_Of_Administration>.{2})");
            sb.Append("(?<Route_Of_Administration>.{11})");
            sb.Append("(?<Diagnosis_Code_Qualifier1>.{2})");
            sb.Append("(?<Diagnosis_Code1>.{15})");
            sb.Append("(?<Diagnosis_Code_Qualifier2>.{2})");
            sb.Append("(?<Diagnosis_Code2>.{15})");
            sb.Append("(?<Diagnosis_Code_Qualifier3>.{2})");
            sb.Append("(?<Diagnosis_Code3>.{15})");
            sb.Append("(?<Diagnosis_Code_Qualifier4>.{2})");
            sb.Append("(?<Diagnosis_Code4>.{15})");
            sb.Append("(?<Diagnosis_Code_Qualifier5>.{2})");
            sb.Append("(?<Diagnosis_Code5>.{15})");
            sb.Append("(?<Reason_For_Service_Code01>.{2})");
            sb.Append("(?<Professional_Service_Code01>.{2})");
            sb.Append("(?<Result_Of_Service_Code01>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort01>.{2})");
            sb.Append("(?<Reason_For_Service_Code02>.{2})");
            sb.Append("(?<Professional_Service_Code02>.{2})");
            sb.Append("(?<Result_Of_Service_Code02>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort02>.{2})");
            sb.Append("(?<Reason_For_Service_Code03>.{2})");
            sb.Append("(?<Professional_Service_Code03>.{2})");
            sb.Append("(?<Result_Of_Service_Code03>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort03>.{2})");
            sb.Append("(?<Reason_For_Service_Code04>.{2})");
            sb.Append("(?<Professional_Service_Code04>.{2})");
            sb.Append("(?<Result_For_Service_Code04>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort04>.{2})");
            sb.Append("(?<Reason_For_Service_Code05>.{2})");
            sb.Append("(?<Professional_Service_Code05>.{2})");
            sb.Append("(?<Result_Of_Service_Code05>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort05>.{2})");
            sb.Append("(?<Reason_For_Service_Code06>.{2})");
            sb.Append("(?<Professional_Service_Code06>.{2})");
            sb.Append("(?<Result_Of_Service_Code06>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort06>.{2})");
            sb.Append("(?<Reason_For_Service_Code07>.{2})");
            sb.Append("(?<Professional_Service_Code07>.{2})");
            sb.Append("(?<Result_Of_Service_Code07>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort07>.{2})");
            sb.Append("(?<Reason_For_Service_Code08>.{2})");
            sb.Append("(?<Professional_Service_Code08>.{2})");
            sb.Append("(?<Result_For_Service_Code08>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort08>.{2})");
            sb.Append("(?<Reason_For_Service_Code09>.{2})");
            sb.Append("(?<Professional_Service_Code09>.{2})");
            sb.Append("(?<Result_For_Service_Code09>.{2})");
            sb.Append("(?<DUR_Level_Of_Effort09>.{2})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<DUR_Coagent_ID>.{19})");
            sb.Append("(?<Reject_Override_Code>.{1})");
            sb.Append("(?<Reject_Code1>.{3})");
            sb.Append("(?<Reject_Code2>.{3})");
            sb.Append("(?<Reject_Code3>.{3})");
            sb.Append("(?<Reject_Code4>.{3})");
            sb.Append("(?<Reject_Code5>.{3})");
            sb.Append("(?<Claim_ID>.{30})");
            sb.Append("(?<Date_Of_Injury>.{8})");
            sb.Append("(?<Database_Indicator>.{1})");
            sb.Append("(?<Product_Name>.{30})");
            sb.Append("(?<Generic_Name>.{30})");
            sb.Append("(?<Product_Strength>.{15})");
            sb.Append("(?<Dosage_Form_Code>.{4})");
            sb.Append("(?<Filler3>.{8})");
            sb.Append("(?<Drug_Type>.{1})");
            sb.Append("(?<Maintenance_Drug_Indicator>.{1})");
            sb.Append("(?<Drug_Category_Code>.{1})");
            sb.Append("(?<Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Prescription_Over_The_Counter_Indicator>.{1})");
            sb.Append("(?<Submission_Clarification_Code1>.{2})");
            sb.Append("(?<Submission_Clarification_Code2>.{2})");
            sb.Append("(?<Submission_Clarification_Code3>.{2})");
            sb.Append("(?<FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Product_Code1>.{17})");
            sb.Append("(?<Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Product_Code2>.{17})");
            sb.Append("(?<Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Product_Code3>.{17})");
            sb.Append("(?<Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Prescribed_Days_Supply>.{3})");
            sb.Append("(?<Therapeutic_Claim_Code_Qualifier1>.{1})");
            sb.Append("(?<Therapeutic_Claim_Code1>.{17})");
            sb.Append("(?<Therapeutic_Claim_Code_Qualifier2>.{1})");
            sb.Append("(?<Therapeutic_Claim_Code2>.{17})");
            sb.Append("(?<Therapeutic_Claim_Code_Qualifier3>.{1})");
            sb.Append("(?<Therapeutic_Claim_Code3>.{17})");
            sb.Append("(?<Therapeutic_Claim_Code_Qualifier4>.{1})");
            sb.Append("(?<Therapeutic_Claim_Code4>.{17})");
            sb.Append("(?<Formulary_Status>.{1})");
            sb.Append("(?<Client_Formulary_Flag>.{1})");
            sb.Append("(?<Therapeutic_Chapter>.{8})");
            sb.Append("(?<Formulary_File_ID>.{15})");
            sb.Append("(?<Formulary_Code_Type>.{1})");
            sb.Append("(?<Ingradient_Cost_Paid>.{8})");
            sb.Append("(?<Dispense_Fee_Paid>.{8})");
            sb.Append("(?<Total_Amount_Paid_By_All_Sources>.{8})");
            sb.Append("(?<Amount_Attributed_To_Sales_Tax>.{8})");
            sb.Append("(?<Patient_Pay_Amount>.{8})");
            sb.Append("(?<Amount_Of_Copay>.{8})");
            sb.Append("(?<Amount_Of_Coinsurance>.{8})");
            sb.Append("(?<Amount_Attributed_To_Product_Sellection>.{8})");
            sb.Append("(?<Amount_Applied_To_Periodic_Deductible>.{8})");
            sb.Append("(?<Amount_Attributed_To_Processor_Fee>.{8})");
            sb.Append("(?<Amount_Attributed_To_Provider_Network_Sellection>.{8})");
            sb.Append("(?<Amount_Attributed_To_Product_Selection_Brand_Drug>.{8})");
            sb.Append("(?<Amount_Attributed_To_Product_Selection_NonPreferred_Formulary>.{8})");
            sb.Append("(?<Amount_Attributed_To_Product_Selection_Brand_NonPreferred_Formulary>.{8})");
            sb.Append("(?<Amount_Attributed_To_Coverage_Gap>.{8})");
            sb.Append("(?<MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Generic_Indicator>.{1})");
            sb.Append("(?<OutofPocket_Apply_Amount>.{8})");
            sb.Append("(?<Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Gross_Amount_Due>.{8})");
            sb.Append("(?<MAC_Price>.{9})");
            sb.Append("(?<Ingredient_Cost_Submitted>.{8})");
            sb.Append("(?<Usual_And_Customary_Charge>.{8})");
            sb.Append("(?<Flat_Sales_Tax_Amount_Paid>.{8})");
            sb.Append("(?<Percentage_Sales_Tax_Amount_Paid>.{8})");
            sb.Append("(?<Percentage_Sales_Tax_Rate_Paid>.{7})");
            sb.Append("(?<Percentage_Sales_Tax_Basis_Paid>.{2})");
            sb.Append("(?<Incentive_Amount_Paid>.{8})");
            sb.Append("(?<Professional_Service_Fee_Paid>.{8})");
            sb.Append("(?<Other_Amount_Paid_Qualifier1>.{2})");
            sb.Append("(?<Other_Amount_Paid1>.{8})");
            sb.Append("(?<Other_Amount_Paid_Qualifier2>.{2})");
            sb.Append("(?<Other_Amount_Paid2>.{8})");
            sb.Append("(?<Other_Amount_Paid_Qualifier3>.{2})");
            sb.Append("(?<Other_Amount_Paid3>.{8})");
            sb.Append("(?<Other_Payer_Amount_Recognized>.{8})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier1>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount1>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier2>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount2>.{10})");
            sb.Append("(?<Net_Amount_Due>.{8})");
            sb.Append("(?<Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Accumulated_Deductible_Amount>.{8})");
            sb.Append("(?<Remaining_Deductible_Amount>.{8})");
            sb.Append("(?<Remaining_Benefit_Amount>.{8})");
            sb.Append("(?<Cost_Difference_Amount>.{8})");
            sb.Append("(?<Excess_Copay_Amount>.{8})");
            sb.Append("(?<Member_Submit_Amount>.{8})");
            sb.Append("(?<Hold_Harmless_Amount>.{8})");
            sb.Append("(?<Amount_Exceeding_Periodic_Benefit_Maximum>.{8})");
            sb.Append("(?<Basis_Of_Calculation_Dispensing_Fee>.{2})");
            sb.Append("(?<Basis_Of_Calculation_Copay>.{2})");
            sb.Append("(?<Basis_Of_Calculation_Flat_Sales_Tax>.{2})");
            sb.Append("(?<Basis_Of_Calculation_Percentage_Sales_Tax>.{2})");
            sb.Append("(?<Basis_Of_Calculation_Coinsurance>.{2})");
            sb.Append("(?<Tax_Excempt_Indicator>.{1})");
            sb.Append("(?<Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Medicare_Recovery_Indicator>.{1})");
            sb.Append("(?<Medicare_Recovery_Dispensing_Indicator>.{1})");
            sb.Append("(?<Patient_Spend_Down_Amount>.{8})");
            sb.Append("(?<Health_Care_Reimbursement_Account_Amount_Applied>.{8})");
            sb.Append("(?<Health_Care_Reimbursement_Account_Amount_Remaining>.{8})");
            sb.Append("(?<Administrative_Fee_Effect_Indicator>.{1})");
            sb.Append("(?<Administrative_Fee_Amount>.{4})");
            sb.Append("(?<Invoiced_Amount>.{11})");
            sb.Append("(?<Filler4>.{10})");
            sb.Append("(?<Spending_Account_Amount_Remaining>.{8})");
            sb.Append("(?<Health_Plan_Funded_Assistance_Amount>.{8})");
            sb.Append("(?<Prior_Authorization_Type_Code>.{2})");
            sb.Append("(?<Prior_Authorization_Number_Submitted>.{11})");
            sb.Append("(?<Prior_Authorization_Number_Assigned>.{11})");
            sb.Append("(?<Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Adjustment_Reason_Code>.{3})");
            sb.Append("(?<Adjustment_Type>.{1})");
            sb.Append("(?<Transaction_ID_Cross_Reference>.{30})");
            sb.Append("(?<COB_Carrier_Submit_Amount>.{8})");
            sb.Append("(?<Eligibility_COB_Indicator>.{1})");
            sb.Append("(?<COB_Primary_Claim_Type>.{1})");
            sb.Append("(?<COB_Primary_Payer_ID>.{10})");
            sb.Append("(?<Filler5>.{8})");
            sb.Append("(?<COB_Primary_Payer_Amount_Paid>.{8})");
            sb.Append("(?<COB_Primary_Payer_Deductible>.{8})");
            sb.Append("(?<COB_Primary_Payer_Coinsurance>.{8})");
            sb.Append("(?<COB_Primary_Payer_Copay>.{8})");
            sb.Append("(?<COB_Secondary_Payer_ID>.{10})");
            sb.Append("(?<Filler6>.{8})");
            sb.Append("(?<COB_Secondary_Payer_Amount_Paid>.{8})");
            sb.Append("(?<COB_Secondary_Payer_Deductible>.{8})");
            sb.Append("(?<COB_Secondary_Payer_Coinsurance>.{8})");
            sb.Append("(?<COB_Secondary_Payer_Copay>.{8})");
            sb.Append("(?<Transaction_ID>.{30})");
            sb.Append("(?<Authorization_Number>.{20})");
            sb.Append("(?<Client_Specific_Data>.{50})");
            sb.Append("(?<Processor_Specific_Data>.{50})");
            sb.Append("(?<CMS_PartD_Defined_Qualified_Facility>.{1})");
            sb.Append("(?<Benefit_Stage_Qualifier1>.{2})");
            sb.Append("(?<Benefit_Stage_Amount1>.{8})");
            sb.Append("(?<Benefit_Stage_Qualifier2>.{2})");
            sb.Append("(?<Benefit_Stage_Amount2>.{8})");
            sb.Append("(?<Benefit_Stage_Qualifier3>.{2})");
            sb.Append("(?<Benefit_Stage_Amount3>.{8})");
            sb.Append("(?<Benefit_Stage_Qualifier4>.{2})");
            sb.Append("(?<Benefit_Stage_Amount4>.{8})");
            sb.Append("(?<Invoiced_Date>.{8})");
            sb.Append("(?<Outofpocket_Remaining_Amount>.{8})");
            sb.Append("(?<Card_Holder_ID_Alternate>.{20})");
            sb.Append("(?<Number_Of_Generic_Manufacturers>.{3})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier1>.{2})");
            sb.Append("(?<DUR_Coagent_ID1>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier2>.{2})");
            sb.Append("(?<DUR_Coagent_ID2>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier3>.{2})");
            sb.Append("(?<DUR_Coagent_ID3>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier4>.{2})");
            sb.Append("(?<DUR_Coagent_ID4>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier5>.{2})");
            sb.Append("(?<DUR_Coagent_ID5>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier6>.{2})");
            sb.Append("(?<DUR_Coagent_ID6>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier7>.{2})");
            sb.Append("(?<DUR_Coagent_ID7>.{19})");
            sb.Append("(?<DUR_Coagent_ID_Qualifier8>.{2})");
            sb.Append("(?<DUR_Coagent_ID8>.{19})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier01>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount01>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier02>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount02>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier03>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount03>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier04>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount04>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier05>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount05>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier06>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount06>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier07>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount07>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier08>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount08>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier09>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount09>.{10})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount_Qualifier10>.{2})");
            sb.Append("(?<Other_Payer_Patient_Responsibility_Amount10>.{10})");
            sb.Append("(?<Specialty_Claim_Indicator>.{1})");
            sb.Append("(?<Member_Submitted_Claim_Reject_Code1>.{3})");
            sb.Append("(?<Member_Submitted_Claim_Reject_Code2>.{3})");
            sb.Append("(?<Member_Submitted_Claim_Reject_Code3>.{3})");
            sb.Append("(?<Member_Submitted_Claim_Reject_Code4>.{3})");
            sb.Append("(?<Member_Submitted_Claim_Reject_Code5>.{3})");
            sb.Append("(?<Copay_Waiver_Amount>.{8})");
            sb.Append("(?<CMS_PartD_Contract_ID>.{5})");
            sb.Append("(?<Medicare_PartD_Plan_Benefit_Package>.{3})");
            sb.Append("(?<Medicare_Drug_Coverage_Code>.{2})");
            Regex oRxParse_Detail = new Regex(sb.ToString());
            sb = new StringBuilder();
            sb.Append("CD(?<Prescription_Reference_Number_Qualifier>.{1})");
            sb.Append("(?<Prescription_Reference_Number>.{12})");
            sb.Append("(?<Compound_Ingredient_Component_Count>.{2})");
            sb.Append("(?<First_Compound_Product_ID_Qualifier>.{2})");
            sb.Append("(?<First_Compound_Product_ID>.{19})");
            sb.Append("(?<First_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<First_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<First_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<First_Client_Formulary_Flag>.{1})");
            sb.Append("(?<First_Product_Name>.{30})");
            sb.Append("(?<First_Generic_Name>.{30})");
            sb.Append("(?<First_Product_Strength>.{10})");
            sb.Append("(?<First_Dosage_Form_Code>.{4})");
            sb.Append("(?<First_Database_Indicator>.{1})");
            sb.Append("(?<First_Drug_Type>.{1})");
            sb.Append("(?<First_Formulary_Status>.{1})");
            sb.Append("(?<First_Drug_Category_Code>.{1})");
            sb.Append("(?<First_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<First_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<First_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<First_Product_Code1>.{17})");
            sb.Append("(?<First_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<First_Product_Code2>.{17})");
            sb.Append("(?<First_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<First_Product_Code3>.{17})");
            sb.Append("(?<First_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<First_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<First_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<First_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<First_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<First_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<First_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<First_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<First_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<First_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<First_Unit_Of_Measure>.{2})");
            sb.Append("(?<First_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<First_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<First_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<First_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<First_DUR_Coagent_ID>.{19})");
            sb.Append("(?<First_Generic_Indicator>.{1})");
            sb.Append("(?<First_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<First_Therapeutic_Chapter>.{8})");
            sb.Append("(?<First_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<First_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<First_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<First_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<First_MAC_Price>.{9})");
            sb.Append("(?<First_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<First_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Second_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Second_Compound_ID>.{19})");
            sb.Append("(?<Second_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Second_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Second_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Second_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Second_Product_Name>.{30})");
            sb.Append("(?<Second_Generic_Name>.{30})");
            sb.Append("(?<Second_Product_Strength>.{10})");
            sb.Append("(?<Second_Dosage_Form_Code>.{4})");
            sb.Append("(?<Second_Database_Indicator>.{1})");
            sb.Append("(?<Second_Drug_Type>.{1})");
            sb.Append("(?<Second_Formulary_Status>.{1})");
            sb.Append("(?<Second_Drug_Category_Code>.{1})");
            sb.Append("(?<Second_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Second_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Second_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Second_Product_Code1>.{17})");
            sb.Append("(?<Second_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Second_Product_Code2>.{17})");
            sb.Append("(?<Second_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Second_Product_Code3>.{17})");
            sb.Append("(?<Second_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Second_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Second_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Second_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Second_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Second_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Second_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Second_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Second_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Second_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Second_Unit_Of_Measure>.{2})");
            sb.Append("(?<Second_Proceddor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Second_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Second_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Second_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Second_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Second_Generic_Indicator>.{1})");
            sb.Append("(?<Second_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Second_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Second_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Second_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Second_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Second_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Second_MAC_Price>.{9})");
            sb.Append("(?<Second_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Second_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Third_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Third_Compound_ID>.{19})");
            sb.Append("(?<Third_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Third_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Third_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Third_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Third_Product_Name>.{30})");
            sb.Append("(?<Third_Generic_Name>.{30})");
            sb.Append("(?<Third_Product_Strength>.{10})");
            sb.Append("(?<Third_Dosage_Form_Code>.{4})");
            sb.Append("(?<Third_Database_Indicator>.{1})");
            sb.Append("(?<Third_Drug_Type>.{1})");
            sb.Append("(?<Third_Formulary_Status>.{1})");
            sb.Append("(?<Third_Drug_Category_Code>.{1})");
            sb.Append("(?<Third_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Third_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Third_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Third_Product_Code1>.{17})");
            sb.Append("(?<Third_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Third_Product_Code2>.{17})");
            sb.Append("(?<Third_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Third_Product_Code3>.{17})");
            sb.Append("(?<Third_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Third_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Third_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Third_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Third_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Third_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Third_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Third_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Third_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Third_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Third_Unit_Of_Measure>.{2})");
            sb.Append("(?<Third_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Third_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Third_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Third_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Third_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Third_Generic_Indicator>.{1})");
            sb.Append("(?<Third_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Third_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Third_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Third_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Third_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Third_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Third_MAC_Price>.{9})");
            sb.Append("(?<Third_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Third_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Fourth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Fourth_Compound_ID>.{19})");
            sb.Append("(?<Fourth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Fourth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Fourth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Fourth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Fourth_Product_Name>.{30})");
            sb.Append("(?<Fourth_Generic_Name>.{30})");
            sb.Append("(?<Fourth_Product_Strength>.{10})");
            sb.Append("(?<Fourth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Fourth_Database_Indicator>.{1})");
            sb.Append("(?<Fourth_Drug_Type>.{1})");
            sb.Append("(?<Fourth_Formulary_Status>.{1})");
            sb.Append("(?<Fourth_Drug_Category_Code>.{1})");
            sb.Append("(?<Fourth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Fourth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Fourth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Fourth_Product_Code1>.{17})");
            sb.Append("(?<Fourth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Fourth_Product_Code2>.{17})");
            sb.Append("(?<Fourth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Fourth_Product_Code3>.{17})");
            sb.Append("(?<Fourth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Fourth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Fourth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Fourth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Fourth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Fourth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Fourth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Fourth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Fourth_Generic_Indicator>.{1})");
            sb.Append("(?<Fourth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Fourth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Fourth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Fourth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Fourth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Fourth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Fourth_MAC_Price>.{9})");
            sb.Append("(?<Fourth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Fourth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Fifth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Fifth_Compound_ID>.{19})");
            sb.Append("(?<Fifth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Fifth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Fifth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Fifth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Fifth_Product_Name>.{30})");
            sb.Append("(?<Fifth_Generic_Name>.{30})");
            sb.Append("(?<Fifth_Product_Strength>.{10})");
            sb.Append("(?<Fifth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Fifth_Database_Indicator>.{1})");
            sb.Append("(?<Fifth_Drug_Type>.{1})");
            sb.Append("(?<Fifth_Formulary_Status>.{1})");
            sb.Append("(?<Fifth_Drug_Category_Code>.{1})");
            sb.Append("(?<Fifth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Fifth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Fifth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Fifth_Product_Code1>.{17})");
            sb.Append("(?<Fifth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Fifth_Product_Code2>.{17})");
            sb.Append("(?<Fifth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Fifth_Product_Code3>.{17})");
            sb.Append("(?<Fifth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Fifth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Fifth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Fifth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Fifth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Fifth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Fifth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Fifth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Fifth_Generic_Indicator>.{1})");
            sb.Append("(?<Fifth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Fifth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Fifth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Fifth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Fifth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Fifth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Fifth_MAC_Price>.{9})");
            sb.Append("(?<Fifth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Fifth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Sixth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Sixth_Compound_ID>.{19})");
            sb.Append("(?<Sixth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Sixth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Sixth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Sixth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Sixth_Product_Name>.{30})");
            sb.Append("(?<Sixth_Generic_Name>.{30})");
            sb.Append("(?<Sixth_Product_Strength>.{10})");
            sb.Append("(?<Sixth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Sixth_Database_Indicator>.{1})");
            sb.Append("(?<Sixth_Drug_Type>.{1})");
            sb.Append("(?<Sixth_Formulary_Status>.{1})");
            sb.Append("(?<Sixth_Drug_Category_Code>.{1})");
            sb.Append("(?<Sixth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Sixth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Sixth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Sixth_Product_Code1>.{17})");
            sb.Append("(?<Sixth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Sixth_Product_Code2>.{17})");
            sb.Append("(?<Sixth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Sixth_Product_Code3>.{17})");
            sb.Append("(?<Sixth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Sixth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Sixth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Sixth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Sixth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Sixth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Sixth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Sixth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Sixth_Generic_Indicator>.{1})");
            sb.Append("(?<Sixth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Sixth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Sixth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Sixth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Sixth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Sixth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Sixth_MAC_Price>.{9})");
            sb.Append("(?<Sixth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Sixth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Seventh_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Seventh_Compound_ID>.{19})");
            sb.Append("(?<Seventh_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Seventh_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Seventh_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Seventh_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Seventh_Product_Name>.{30})");
            sb.Append("(?<Seventh_Generic_Name>.{30})");
            sb.Append("(?<Seventh_Product_Strength>.{10})");
            sb.Append("(?<Seventh_Dosage_Form_Code>.{4})");
            sb.Append("(?<Seventh_Database_Indicator>.{1})");
            sb.Append("(?<Seventh_Drug_Type>.{1})");
            sb.Append("(?<Seventh_Formulary_Status>.{1})");
            sb.Append("(?<Seventh_Drug_Category_Code>.{1})");
            sb.Append("(?<Seventh_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Seventh_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Seventh_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Seventh_Product_Code1>.{17})");
            sb.Append("(?<Seventh_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Seventh_Product_Code2>.{17})");
            sb.Append("(?<Seventh_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Seventh_Product_Code3>.{17})");
            sb.Append("(?<Seventh_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Seventh_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Seventh_Unit_Of_Measure>.{2})");
            sb.Append("(?<Seventh_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Seventh_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Seventh_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Seventh_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Seventh_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Seventh_Generic_Indicator>.{1})");
            sb.Append("(?<Seventh_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Seventh_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Seventh_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Seventh_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Seventh_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Seventh_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Seventh_MAC_Price>.{9})");
            sb.Append("(?<Seventh_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Seventh_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Eighth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Eighth_Compound_ID>.{19})");
            sb.Append("(?<Eighth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Eighth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Eighth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Eighth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Eighth_Product_Name>.{30})");
            sb.Append("(?<Eighth_Generic_Name>.{30})");
            sb.Append("(?<Eighth_Product_Strength>.{10})");
            sb.Append("(?<Eighth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Eighth_Database_Indicator>.{1})");
            sb.Append("(?<Eighth_Drug_Type>.{1})");
            sb.Append("(?<Eighth_Formulary_Status>.{1})");
            sb.Append("(?<Eighth_Drug_Category_Code>.{1})");
            sb.Append("(?<Eighth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Eighth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Eighth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Eighth_Product_Code1>.{17})");
            sb.Append("(?<Eighth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Eighth_Product_Code2>.{17})");
            sb.Append("(?<Eighth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Eighth_Product_Code3>.{17})");
            sb.Append("(?<Eighth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Eighth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Eighth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Eighth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Eighth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Eighth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Eighth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Eighth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Eighth_Generic_Indicator>.{1})");
            sb.Append("(?<Eighth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Eighth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Eighth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Eighth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Eighth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Eighth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Eighth_MAC_Price>.{9})");
            sb.Append("(?<Eighth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Eighth_Patient_Formulary_Rebate_Amount>.{8})");
            Regex oRxParse_Compound1 = new Regex(sb.ToString());
            sb = new StringBuilder();
            sb.Append("CE(?<Prescription_Reference_Number_Qualifier>.{1})");
            sb.Append("(?<Prescription_Reference_Number>.{12})");
            sb.Append("(?<Compound_Ingredient_Component_Count>.{2})");
            sb.Append("(?<Ninth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Ninth_Compound_ID>.{19})");
            sb.Append("(?<Ninth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Ninth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Ninth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Ninth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Ninth_Product_Name>.{30})");
            sb.Append("(?<Ninth_Generic_Name>.{30})");
            sb.Append("(?<Ninth_Product_Strength>.{10})");
            sb.Append("(?<Ninth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Ninth_Database_Indicator>.{1})");
            sb.Append("(?<Ninth_Drug_Type>.{1})");
            sb.Append("(?<Ninth_Formulary_Status>.{1})");
            sb.Append("(?<Ninth_Drug_Category_Code>.{1})");
            sb.Append("(?<Ninth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Ninth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Ninth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Ninth_Product_Code1>.{17})");
            sb.Append("(?<Ninth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Ninth_Product_Code2>.{17})");
            sb.Append("(?<Ninth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Ninth_Product_Code3>.{17})");
            sb.Append("(?<Ninth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Ninth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Ninth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Ninth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Ninth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Ninth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Ninth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Ninth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Ninth_Generic_Indicator>.{1})");
            sb.Append("(?<Ninth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Ninth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Ninth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Ninth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Ninth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Ninth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Ninth_MAC_Price>.{9})");
            sb.Append("(?<Ninth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Ninth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Tenth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Tenth_Compound_ID>.{19})");
            sb.Append("(?<Tenth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Tenth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Tenth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Tenth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Tenth_Product_Name>.{30})");
            sb.Append("(?<Tenth_Generic_Name>.{30})");
            sb.Append("(?<Tenth_Product_Strength>.{10})");
            sb.Append("(?<Tenth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Tenth_Database_Indicator>.{1})");
            sb.Append("(?<Tenth_Drug_Type>.{1})");
            sb.Append("(?<Tenth_Formulary_Status>.{1})");
            sb.Append("(?<Tenth_Drug_Category_Code>.{1})");
            sb.Append("(?<Tenth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Tenth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Tenth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Tenth_Product_Code1>.{17})");
            sb.Append("(?<Tenth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Tenth_Product_Code2>.{17})");
            sb.Append("(?<Tenth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Tenth_Product_Code3>.{17})");
            sb.Append("(?<Tenth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Tenth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Tenth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Tenth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Tenth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Tenth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Tenth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Tenth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Tenth_Generic_Indicator>.{1})");
            sb.Append("(?<Tenth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Tenth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Tenth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Tenth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Tenth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Tenth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Tenth_MAC_Price>.{9})");
            sb.Append("(?<Tenth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Tenth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Eleventh_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Eleventh_Compound_ID>.{19})");
            sb.Append("(?<Eleventh_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Eleventh_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Eleventh_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Eleventh_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Eleventh_Product_Name>.{30})");
            sb.Append("(?<Eleventh_Generic_Name>.{30})");
            sb.Append("(?<Eleventh_Product_Strength>.{10})");
            sb.Append("(?<Eleventh_Dosage_Form_Code>.{4})");
            sb.Append("(?<Eleventh_Database_Indicator>.{1})");
            sb.Append("(?<Eleventh_Drug_Type>.{1})");
            sb.Append("(?<Eleventh_Formulary_Status>.{1})");
            sb.Append("(?<Eleventh_Drug_Category_Code>.{1})");
            sb.Append("(?<Eleventh_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Eleventh_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Eleventh_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Eleventh_Product_Code1>.{17})");
            sb.Append("(?<Eleventh_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Eleventh_Product_Code2>.{17})");
            sb.Append("(?<Eleventh_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Eleventh_Product_Code3>.{17})");
            sb.Append("(?<Eleventh_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Eleventh_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Eleventh_Unit_Of_Measure>.{2})");
            sb.Append("(?<Eleventh_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Eleventh_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Eleventh_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Eleventh_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Eleventh_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Eleventh_Generic_Indicator>.{1})");
            sb.Append("(?<Eleventh_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Eleventh_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Eleventh_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Eleventh_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Eleventh_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Eleventh_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Eleventh_MAC_Price>.{9})");
            sb.Append("(?<Eleventh_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Eleventh_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Twelfth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Twelfth_Compound_ID>.{19})");
            sb.Append("(?<Twelfth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Twelfth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Twelfth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Twelfth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Twelfth_Product_Name>.{30})");
            sb.Append("(?<Twelfth_Generic_Name>.{30})");
            sb.Append("(?<Twelfth_Product_Strength>.{10})");
            sb.Append("(?<Twelfth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Twelfth_Database_Indicator>.{1})");
            sb.Append("(?<Twelfth_Drug_Type>.{1})");
            sb.Append("(?<Twelfth_Formulary_Status>.{1})");
            sb.Append("(?<Twelfth_Drug_Category_Code>.{1})");
            sb.Append("(?<Twelfth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Twelfth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Twelfth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Twelfth_Product_Code1>.{17})");
            sb.Append("(?<Twelfth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Twelfth_Product_Code2>.{17})");
            sb.Append("(?<Twelfth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Twelfth_Product_Code3>.{17})");
            sb.Append("(?<Twelfth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Twelfth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Twelfth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Twelfth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Twelfth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Twelfth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Twelfth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Twelfth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Twelfth_Generic_Indicator>.{1})");
            sb.Append("(?<Twelfth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Twelfth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Twelfth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Twelfth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Twelfth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Twelfth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Twelfth_MAC_Price>.{9})");
            sb.Append("(?<Twelfth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Twelfth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Thirteenth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Thirteenth_Compound_ID>.{19})");
            sb.Append("(?<Thirteenth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Thirteenth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Thirteenth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Thirteenth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Thirteenth_Product_Name>.{30})");
            sb.Append("(?<Thirteenth_Generic_Name>.{30})");
            sb.Append("(?<Thirteenth_Product_Strength>.{10})");
            sb.Append("(?<Thirteenth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Thirteenth_Database_Indicator>.{1})");
            sb.Append("(?<Thirteenth_Drug_Type>.{1})");
            sb.Append("(?<Thirteenth_Formulary_Status>.{1})");
            sb.Append("(?<Thirteenth_Drug_Category_Code>.{1})");
            sb.Append("(?<Thirteenth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Thirteenth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Thirteenth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Thirteenth_Product_Code1>.{17})");
            sb.Append("(?<Thirteenth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Thirteenth_Product_Code2>.{17})");
            sb.Append("(?<Thirteenth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Thirteenth_Product_Code3>.{17})");
            sb.Append("(?<Thirteenth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Thirteenth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Thirteenth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Thirteenth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Thirteenth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Thirteenth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Thirteenth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Thirteenth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Thirteenth_Generic_Indicator>.{1})");
            sb.Append("(?<Thirteenth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Thirteenth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Thirteenth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Thirteenth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Thirteenth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Thirteenth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Thirteenth_MAC_Price>.{9})");
            sb.Append("(?<Thirteenth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Thirteenth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Fourteenth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Fourteenth_Compound_ID>.{19})");
            sb.Append("(?<Fourteenth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Fourteenth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Fourteenth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Fourteenth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Fourteenth_Product_Name>.{30})");
            sb.Append("(?<Fourteenth_Generic_Name>.{30})");
            sb.Append("(?<Fourteenth_Product_Strength>.{10})");
            sb.Append("(?<Fourteenth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Fourteenth_Database_Indicator>.{1})");
            sb.Append("(?<Fourteenth_Drug_Type>.{1})");
            sb.Append("(?<Fourteenth_Formulary_Status>.{1})");
            sb.Append("(?<Fourteenth_Drug_Category_Code>.{1})");
            sb.Append("(?<Fourteenth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Fourteenth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Fourteenth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Fourteenth_Product_Code1>.{17})");
            sb.Append("(?<Fourteenth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Fourteenth_Product_Code2>.{17})");
            sb.Append("(?<Fourteenth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Fourteenth_Product_Code3>.{17})");
            sb.Append("(?<Fourteenth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Fourteenth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Fourteenth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Fourteenth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Fourteenth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Fourteenth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Fourteenth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Fourteenth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Fourteenth_Generic_Indicator>.{1})");
            sb.Append("(?<Fourteenth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Fourteenth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Fourteenth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Fourteenth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Fourteenth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Fourteenth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Fourteenth_MAC_Price>.{9})");
            sb.Append("(?<Fourteenth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Fourteenth_Patient_Formulary_Rebate_Amount>.{8})");
            sb.Append("(?<Fifteenth_Compound_ID_Qualifier>.{2})");
            sb.Append("(?<Fifteenth_Compound_ID>.{19})");
            sb.Append("(?<Fifteenth_Compound_Ingredient_Quantity>.{14})");
            sb.Append("(?<Fifteenth_Compound_Ingredient_Drug_Cost>.{8})");
            sb.Append("(?<Fifteenth_Compound_ingredient_Basis_Of_Cost_Determination>.{2})");
            sb.Append("(?<Fifteenth_Client_Formulary_Flag>.{1})");
            sb.Append("(?<Fifteenth_Product_Name>.{30})");
            sb.Append("(?<Fifteenth_Generic_Name>.{30})");
            sb.Append("(?<Fifteenth_Product_Strength>.{10})");
            sb.Append("(?<Fifteenth_Dosage_Form_Code>.{4})");
            sb.Append("(?<Fifteenth_Database_Indicator>.{1})");
            sb.Append("(?<Fifteenth_Drug_Type>.{1})");
            sb.Append("(?<Fifteenth_Formulary_Status>.{1})");
            sb.Append("(?<Fifteenth_Drug_Category_Code>.{1})");
            sb.Append("(?<Fifteenth_Federal_DEA_Schedule>.{1})");
            sb.Append("(?<Fifteenth_FDA_Drug_Efficacy_Code>.{1})");
            sb.Append("(?<Fifteenth_Product_Code_Qualifier1>.{1})");
            sb.Append("(?<Fifteenth_Product_Code1>.{17})");
            sb.Append("(?<Fifteenth_Product_Code_Qualifier2>.{1})");
            sb.Append("(?<Fifteenth_Product_Code2>.{17})");
            sb.Append("(?<Fifteenth_Product_Code_Qualifier3>.{1})");
            sb.Append("(?<Fifteenth_Product_Code3>.{17})");
            sb.Append("(?<Fifteenth_Federal_Upper_Limit_Indicator>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code_Qualifier1>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code1>.{17})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code_Qualifier2>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code2>.{17})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code_Qualifier3>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code3>.{17})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code_Qualifier4>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Class_Code4>.{17})");
            sb.Append("(?<Fifteenth_Special_Packaging_Indicator>.{1})");
            sb.Append("(?<Fifteenth_Unit_Of_Measure>.{2})");
            sb.Append("(?<Fifteenth_Processor_Defined_Prior_Authorization_Reason_Code>.{2})");
            sb.Append("(?<Fifteenth_MAC_Reduced_Indicator>.{1})");
            sb.Append("(?<Fifteenth_Client_Pricing_Basis_Of_Cost>.{2})");
            sb.Append("(?<Fifteenth_DUR_Coagent_ID_Qualifier>.{2})");
            sb.Append("(?<Fifteenth_DUR_Coagent_ID>.{19})");
            sb.Append("(?<Fifteenth_Generic_Indicator>.{1})");
            sb.Append("(?<Fifteenth_Plan_Cutback_Reason_Code>.{1})");
            sb.Append("(?<Fifteenth_Therapeutic_Chapter>.{8})");
            sb.Append("(?<Fifteenth_Average_Cost_Per_Quantity_Unit_Price>.{9})");
            sb.Append("(?<Fifteenth_Average_Generic_Unit_Price>.{9})");
            sb.Append("(?<Fifteenth_Average_Wholesale_Unit_Price>.{9})");
            sb.Append("(?<Fifteenth_Federal_Upper_Limit_Unit_Price>.{9})");
            sb.Append("(?<Fifteenth_MAC_Price>.{9})");
            sb.Append("(?<Fifteenth_Basis_Of_Reimbursement_Determination>.{2})");
            sb.Append("(?<Fifteenth_Patient_Formulary_Rebate_Amount>.{8})");
            Regex oRxParse_Compound2 = new Regex(sb.ToString());

            sb = new StringBuilder();
            sb.Append("PT(?<Total_Record_Count>.{10})");
            sb.Append("(?<Total_Net_Amount_Due>.{12})");
            sb.Append("(?<Total_Gross_Amount_Due>.{12})");
            sb.Append("(?<Total_Patient_Pay_Amount>.{12})");
            Regex oRxParse_Trailer = new Regex(sb.ToString());

            Regex oRxParse_UtlHeader = new Regex(@"PW(?<Version_Number>.{2})
            (?<Sending_Entity_ID>.{24})
            (?<Batch_Number>.{7})
            (?<Creation_Date>.{8})
            (?<Creation_Time>.{4})
            (?<Receiver_ID>.{24})
            (?<Reporting_Start_Date>.{8})
            (?<Reporting_End_Date>.{8})
            (?<File_Type>.{1})
            (?<Transmission_Action>.{1})
            (?<Submission_Number>.{2})
            ");

            Regex oRxParse_UtlDetail = new Regex(@"PU(?<Record_Indicator>.{1})
            (?<Card_Holder_ID>.{20})
            (?<Patient_ID_Qualifier>.{2})
            (?<Patient_ID>.{20})
            (?<Patient_Last_Name>.{35})
            (?<Patient_First_Name>.{35})
            (?<Patient_Middle_Initial>.{1})
            (?<Patient_Date_Of_Birth>.{8})
            (?<Patient_Gender_Code>.{1})
            (?<Patient_Relationship_Code>.{1})
            (?<Group_ID>.{15})
            (?<Plan_Type>.{4})
            (?<Service_Provider_ID_Qualifier>.{2})
            (?<Service_Provider_ID>.{15})
            (?<Service_Provider_Chain_Code>.{7})
            (?<Prescriber_ID_Qualifier>.{2})
            (?<Prescriber_ID>.{15})
            (?<Prescriber_Last_Name>.{35})
            (?<Prescriber_First_Name>.{35})
            (?<Primary_Care_Provider_Qualifier>.{2})
            (?<Primary_Care_Provider_ID>.{15})
            (?<Primary_Care_Provider_Last_Name>.{35})
            (?<Primary_Care_Provider_First_Name>.{35})
            (?<Record_Status_Code>.{1})
            (?<Prescription_Reference_Number_Qualifier>.{1})
            (?<Prescription_Reference_Number>.{12})
            (?<Product_ID_Qualifier>.{2})
            (?<Product_ID>.{19})
            (?<Product_ID_Qualifier_Alternate>.{2})
            (?<Product_ID_Alternate>.{19})
            (?<Date_Of_Service>.{8})
            (?<Billing_Cycle_End_Date>.{8})
            (?<Place_Of_Service>.{2})
            (?<Patient_Residence>.{2})
            (?<Version_Number_Of_Claim>.{2})
            (?<Quantity_Dispensed>.{10})
            (?<Fill_Number>.{2})
            (?<Days_Supply>.{3})
            (?<DAW_Product_Selection_Code>.{1})
            (?<Fill_Number_Calculated>.{2})
            (?<Compound_Code>.{1})
            (?<Compound_Type>.{2})
            (?<Compound_Route_Of_Administration>.{2})
            (?<Route_Of_Administration>.{11})
            (?<Product_Name>.{30})
            (?<Generic_Name>.{30})
            (?<Product_Strength>.{15})
            (?<Dosage_Form_Code>.{4})
            (?<Drug_Type>.{1})
            (?<Formulary_Status>.{1})
            (?<Patient_Pay_Amount>.{8})
            (?<Ingredient_Cost_Submitted>.{8})
            (?<Net_Amount_Due>.{8})
            (?<Adjustment_Type>.{1})
            (?<Transaction_ID>.{30})
            ");

            Regex oRxParse_UtlCompound = new Regex(@"PX(?<Prescription_Reference_Number_Qualifier>.{1})
            (?<Prescription_Reference_Number>.{12})
            (?<Compound_Ingredient_Count>.{2})
            (?<First_Compound_ID_Qualifier>.{2})
            (?<First_Compound_ID>.{19})
            (?<First_Compound_Ingredient_Quantity>.{14})
            (?<First_Compound_Ingredient_Drug_Cost>.{8})
            (?<First_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Second_Compound_ID_Qualifier>.{2})
            (?<Second_Compound_ID>.{19})
            (?<Second_Compound_Ingredient_Quantity>.{14})
            (?<Second_Compound_Ingredient_Drug_Cost>.{8})
            (?<Second_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Third_Compound_ID_Qualifier>.{2})
            (?<Third_Compound_ID>.{19})
            (?<Third_Compound_Ingredient_Quantity>.{14})
            (?<Third_Compound_Ingredient_Drug_Cost>.{8})
            (?<Third_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Fourth_Compound_ID_Qualifier>.{2})
            (?<Fourth_Compound_ID>.{19})
            (?<Fourth_Compound_Ingredient_Quantity>.{14})
            (?<Fourth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Fourth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Fifth_Compound_ID_Qualifier>.{2})
            (?<Fifth_Compound_ID>.{19})
            (?<Fifth_Compound_Ingredient_Quantity>.{14})
            (?<Fifth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Fifth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
           (?<Sixth_Compound_ID_Qualifier>.{2})
            (?<Sixth_Compound_ID>.{19})
            (?<Sixth_Compound_Ingredient_Quantity>.{14})
            (?<Sixth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Sixth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Seventh_Compound_ID_Qualifier>.{2})
            (?<Seventh_Compound_ID>.{19})
            (?<Seventh_Compound_Ingredient_Quantity>.{14})
            (?<Seventh_Compound_Ingredient_Drug_Cost>.{8})
            (?<Seventh_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Eighth_Compound_ID_Qualifier>.{2})
            (?<Eighth_Compound_ID>.{19})
            (?<Eighth_Compound_Ingredient_Quantity>.{14})
            (?<Eighth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Eighth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Ninth_Compound_ID_Qualifier>.{2})
            (?<Ninth_Compound_ID>.{19})
            (?<Ninth_Compound_Ingredient_Quantity>.{14})
            (?<Ninth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Ninth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Tenth_Compound_ID_Qualifier>.{2})
            (?<Tenth_Compound_ID>.{19})
            (?<Tenth_Compound_Ingredient_Quantity>.{14})
            (?<Tenth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Tenth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Eleventh_Compound_ID_Qualifier>.{2})
            (?<Eleventh_Compound_ID>.{19})
            (?<Eleventh_Compound_Ingredient_Quantity>.{14})
            (?<Eleventh_Compound_Ingredient_Drug_Cost>.{8})
            (?<Eleventh_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Twelfth_Compound_ID_Qualifier>.{2})
            (?<Twelfth_Compound_ID>.{19})
            (?<Twelfth_Compound_Ingredient_Quantity>.{14})
            (?<Twelfth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Twelfth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Thirteenth_Compound_ID_Qualifier>.{2})
            (?<Thirteenth_Compound_ID>.{19})
            (?<Thirteenth_Compound_Ingredient_Quantity>.{14})
            (?<Thirteenth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Thirteenth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Fourteenth_Compound_ID_Qualifier>.{2})
            (?<Fourteenth_Compound_ID>.{19})
            (?<Fourteenth_Compound_Ingredient_Quantity>.{14})
            (?<Fourteenth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Fourteenth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            (?<Fifteenth_Compound_ID_Qualifier>.{2})
            (?<Fifteenth_Compound_ID>.{19})
            (?<Fifteenth_Compound_Ingredient_Quantity>.{14})
            (?<Fifteenth_Compound_Ingredient_Drug_Cost>.{8})
            (?<Fifteenth_Compound_Ingredient_Basis_Of_Cost_Determination>.{2})
            ");

            Regex oRxParse_UtlTrailer = new Regex(@"PY(?<Total_Record_Count>.{10})
            (?<Total_Amount_Due>.{12})
            ");

            using (StreamReader sr = new StreamReader(FileName))
            {

                string line = sr.ReadLine();
                if (string.IsNullOrEmpty(line)) return 0;
                Match headerMatch = oRxParse_Header.Match(line);
                if (!headerMatch.Success) return 0;
                HisHeader fh = new HisHeader();
                fh.RecordType = "PA";
                fh.VersionReleaseNumber = headerMatch.Groups["Version_Number"].Value.Trim();
                fh.SenderID = headerMatch.Groups["Sender_ID"].Value.Trim();
                fh.BatchNumber = headerMatch.Groups["Batch_Number"].Value.Trim();
                fh.CreationDate = headerMatch.Groups["Creation_Date"].Value.Trim();
                fh.CreationTime = headerMatch.Groups["Creation_Time"].Value.Trim();
                fh.ReceiverID = headerMatch.Groups["Receiver_ID"].Value.Trim();
                fh.ReportStartDate = headerMatch.Groups["ReportStartDate"].Value.Trim();
                fh.ReportEndDate = headerMatch.Groups["ReportEndDate"].Value.Trim();
                fh.FileType = headerMatch.Groups["FileType"].Value.Trim();
                fh.TransmissionAction = headerMatch.Groups["Transmission_Action"].Value.Trim();
                fh.SubmissionNumber = headerMatch.Groups["Submission_Number"].Value.Trim();
                fh.FilePath = FileName;
                fh.AddedDate = DateTime.Now;
                int FileHeaderID = DataAccess.SaveHisHeader(fh);
                int DetailID = 0;
                while (!sr.EndOfStream)
                {
                    line = sr.ReadLine();
                    if (string.IsNullOrEmpty(line)) continue;
                    Match detailMatch = oRxParse_Detail.Match(line);
                    if (detailMatch.Success)
                    {
                        HisDetail hd = new HisDetail();
                        hd.FileID = FileHeaderID;
                        hd.Record_Type = "DE";
                        hd.Record_Indicator = detailMatch.Groups["Record_Indicator"].Value.Trim();
                        hd.Eligible_Coverage_Code = detailMatch.Groups["Eligible_Coverage_Code"].Value.Trim();
                        hd.User_Benefit_ID = detailMatch.Groups["User_Benefit_ID"].Value.Trim();
                        hd.User_Coverage_ID = detailMatch.Groups["User_Coverage_ID"].Value.Trim();
                        hd.Eligibility_Group_ID = detailMatch.Groups["Eligibility_Group_ID"].Value.Trim();
                        hd.Line_Of_Business_Code = detailMatch.Groups["Line_Of_Business_Code"].Value.Trim();
                        hd.Insurance_Code = detailMatch.Groups["Insurance_Code"].Value.Trim();
                        hd.Client_Assigned_Location_Code = detailMatch.Groups["Client_Assigned_Location_Code"].Value.Trim();
                        hd.Client_Pass_Through = detailMatch.Groups["Client_Pass_Through"].Value.Trim();
                        hd.Card_Holder_ID = detailMatch.Groups["Card_Holder_ID"].Value.Trim();
                        hd.CH_Last_Name = detailMatch.Groups["CH_Last_Name"].Value.Trim();
                        hd.CH_First_Name = detailMatch.Groups["CH_First_Name"].Value.Trim();
                        hd.CH_Middle_Initial = detailMatch.Groups["CH_Middle_Initial"].Value.Trim();
                        hd.CH_Name_Suffix = detailMatch.Groups["CH_Name_Suffix"].Value.Trim();
                        hd.CH_Address_Line_1 = detailMatch.Groups["CH_Address_Line_1"].Value.Trim();
                        hd.CH_Address_Line_2 = detailMatch.Groups["CH_Address_Line_2"].Value.Trim();
                        hd.CH_City = detailMatch.Groups["CH_City"].Value.Trim();
                        hd.CH_State = detailMatch.Groups["CH_State"].Value.Trim();
                        hd.CH_Zip = detailMatch.Groups["CH_Zip"].Value.Trim();
                        hd.CH_Entity_Country_Code = detailMatch.Groups["CH_Entity_Country_Code"].Value.Trim();
                        hd.CH_Date_Of_Birth = detailMatch.Groups["CH_Date_Of_Birth"].Value.Trim();
                        hd.CH_Gender_Code = detailMatch.Groups["CH_Gender_Code"].Value.Trim();
                        hd.CH_Medicare_Plan_Code = detailMatch.Groups["CH_Medicare_Plan_Code"].Value.Trim();
                        hd.CH_Payroll_Class = detailMatch.Groups["CH_Payroll_Class"].Value.Trim();
                        hd.Patient_ID_Qualifier = detailMatch.Groups["Patient_ID_Qualifier"].Value.Trim();
                        hd.Patient_ID = detailMatch.Groups["Patient_ID"].Value.Trim();
                        hd.PT_Last_Name = detailMatch.Groups["PT_Last_Name"].Value.Trim();
                        hd.PT_First_Name = detailMatch.Groups["PT_First_Name"].Value.Trim();
                        hd.PT_Middle_Initial = detailMatch.Groups["PT_Middle_Initial"].Value.Trim();
                        hd.PT_Name_Suffix = detailMatch.Groups["PT_Name_Suffix"].Value.Trim();
                        hd.PT_Address_Line_1 = detailMatch.Groups["PT_Address_Line_1"].Value.Trim();
                        hd.PT_Address_Line_2 = detailMatch.Groups["PT_Address_Line_2"].Value.Trim();
                        hd.PT_City = detailMatch.Groups["PT_City"].Value.Trim();
                        hd.PT_State = detailMatch.Groups["PT_State"].Value.Trim();
                        hd.PT_Zip = detailMatch.Groups["PT_Zip"].Value.Trim();
                        hd.PT_Country_Code = detailMatch.Groups["PT_Country_Code"].Value.Trim();
                        hd.PT_Date_Of_Birth = detailMatch.Groups["PT_Date_Of_Birth"].Value.Trim();
                        hd.PT_Gender_Code = detailMatch.Groups["PT_Gender_Code"].Value.Trim();
                        hd.Eligibility_Relationship_Code = detailMatch.Groups["Eligibility_Relationship_Code"].Value.Trim();
                        hd.PT_Age = detailMatch.Groups["PT_Age"].Value.Trim();
                        hd.PT_Person_Code = detailMatch.Groups["PT_Person_Code"].Value.Trim();
                        hd.Patient_Relationship_Code = detailMatch.Groups["Patient_Relationship_Code"].Value.Trim();
                        hd.Eligibility_Clarification_Code = detailMatch.Groups["Eligibility_Clarification_Code"].Value.Trim();
                        hd.Facility_ID = detailMatch.Groups["Facility_ID"].Value.Trim();
                        hd.Group_ID = detailMatch.Groups["Group_ID"].Value.Trim();
                        hd.Carrier_Number = detailMatch.Groups["Carrier_Number"].Value.Trim();
                        hd.Benefit_ID = detailMatch.Groups["Benefit_ID"].Value.Trim();
                        hd.Contract_Number = detailMatch.Groups["Contract_Number"].Value.Trim();
                        hd.Benefit_Type = detailMatch.Groups["Benefit_Type"].Value.Trim();
                        hd.Member_Submitted_Claim_Program_Code = detailMatch.Groups["Member_Submitted_Claim_Program_Code"].Value.Trim();
                        hd.NonPos_Claim_Override_Code1 = detailMatch.Groups["NonPos_Claim_Override_Code1"].Value.Trim();
                        hd.NonPos_Claim_Override_Code2 = detailMatch.Groups["NonPos_Claim_Override_Code2"].Value.Trim();
                        hd.NonPos_Claim_Override_Code3 = detailMatch.Groups["NonPos_Claim_Override_Code3"].Value.Trim();
                        hd.Copay_Modifier_ID = detailMatch.Groups["Copay_Modifier_ID"].Value.Trim();
                        hd.Plan_Cutback_Reason_Code = detailMatch.Groups["Plan_Cutback_Reason_Code"].Value.Trim();
                        hd.Preferred_Alternative_File_ID = detailMatch.Groups["Preferred_Alternative_File_ID"].Value.Trim();
                        hd.Other_Coverage_Code = detailMatch.Groups["Other_Coverage_Code"].Value.Trim();
                        hd.Plan_Benefit_Code = detailMatch.Groups["Plan_Benefit_Code"].Value.Trim();
                        hd.Plan_Type = detailMatch.Groups["Plan_Type"].Value.Trim();
                        hd.Service_Provider_ID_Qualifier = detailMatch.Groups["Service_Provider_ID_Qualifier"].Value.Trim();
                        hd.Service_Provider_ID = detailMatch.Groups["Service_Provider_ID"].Value.Trim();
                        hd.Service_Provider_ID_Qualifier_Alternate = detailMatch.Groups["Service_Provider_ID_Qualifier_Alternate"].Value.Trim();
                        hd.Service_Provider_ID_Alternate = detailMatch.Groups["Service_Provider_ID_Alternate"].Value.Trim();
                        hd.Service_Provider_Chain_Code = detailMatch.Groups["Service_Provider_Chain_Code"].Value.Trim();
                        hd.Pharmacy_Name = detailMatch.Groups["Pharmacy_Name"].Value.Trim();
                        hd.PH_Address_Line_1 = detailMatch.Groups["PH_Address_Line_1"].Value.Trim();
                        hd.PH_Address_Line_2 = detailMatch.Groups["PH_Address_Line_2"].Value.Trim();
                        hd.PH_City = detailMatch.Groups["PH_City"].Value.Trim();
                        hd.PH_State = detailMatch.Groups["PH_State"].Value.Trim();
                        hd.PH_Zip = detailMatch.Groups["PH_Zip"].Value.Trim();
                        hd.Service_Provider_Country_Code1 = detailMatch.Groups["Service_Provider_Country_Code1"].Value.Trim();
                        hd.Service_Provider_Country_Code2 = detailMatch.Groups["Service_Provider_Country_Code2"].Value.Trim();
                        hd.PH_Telephone_Number = detailMatch.Groups["PH_Telephone_Number"].Value.Trim();
                        hd.PH_Telephone_Number_Extension = detailMatch.Groups["PH_Telephone_Number_Extension"].Value.Trim();
                        hd.Pharmacy_Dispenser_Type_Qualifier = detailMatch.Groups["Pharmacy_Dispenser_Type_Qualifier"].Value.Trim();
                        hd.Pharmacy_Dispenser_Type = detailMatch.Groups["Pharmacy_Dispenser_Type"].Value.Trim();
                        hd.Pharmacy_Class_Code_Qualifier = detailMatch.Groups["Pharmacy_Class_Code_Qualifier"].Value.Trim();
                        hd.Pharmacy_Class_Code = detailMatch.Groups["Pharmacy_Class_Code"].Value.Trim();
                        hd.In_Network_Indicator = detailMatch.Groups["In_Network_Indicator"].Value.Trim();
                        hd.In_Network_Reimbursement_ID = detailMatch.Groups["In_Network_Reimbursement_ID"].Value.Trim();
                        hd.Prescriber_ID_Qualifier = detailMatch.Groups["Prescriber_ID_Qualifier"].Value.Trim();
                        hd.Prescriber_ID = detailMatch.Groups["Prescriber_ID"].Value.Trim();
                        hd.Prescriber_ID_Qualifier_Alternate = detailMatch.Groups["Prescriber_ID_Qualifier_Alternate"].Value.Trim();
                        hd.Prescriber_ID_Alternate = detailMatch.Groups["Prescriber_ID_Alternate"].Value.Trim();
                        hd.Prescriber_Taxonomy = detailMatch.Groups["Prescriber_Taxonomy"].Value.Trim();
                        hd.Prescriber_Certification_Status = detailMatch.Groups["Prescriber_Certification_Status"].Value.Trim();
                        hd.PS_Last_Name = detailMatch.Groups["PS_Last_Name"].Value.Trim();
                        hd.PS_First_Name = detailMatch.Groups["PS_First_Name"].Value.Trim();
                        hd.PS_Telephone_Number = detailMatch.Groups["PS_Telephone_Number"].Value.Trim();
                        hd.PS_Telephone_Number_Extension = detailMatch.Groups["PS_Telephone_Number_Extension"].Value.Trim();
                        hd.Primary_Care_Provider_ID_Qualifier = detailMatch.Groups["Primary_Care_Provider_ID_Qualifier"].Value.Trim();
                        hd.Primary_Care_Provider_ID = detailMatch.Groups["Primary_Care_Provider_ID"].Value.Trim();
                        hd.PC_Last_Name = detailMatch.Groups["PC_Last_Name"].Value.Trim();
                        hd.PC_First_Name = detailMatch.Groups["PC_First_Name"].Value.Trim();
                        hd.Record_Status_Code = detailMatch.Groups["Record_Status_Code"].Value.Trim();
                        hd.Claim_Media_Type = detailMatch.Groups["Claim_Media_Type"].Value.Trim();
                        hd.Processor_Payment_Clarification_Code = detailMatch.Groups["Processor_Payment_Clarification_Code"].Value.Trim();
                        hd.Prescription_Service_Reference_Number_Qualifier = detailMatch.Groups["Prescription_Service_Reference_Number_Qualifier"].Value.Trim();
                        hd.Prescription_Service_Reference_Number = detailMatch.Groups["Prescription_Service_Reference_Number"].Value.Trim();
                        hd.Product_Service_ID_Qualifier = detailMatch.Groups["Product_Service_ID_Qualifier"].Value.Trim();
                        hd.Product_Service_ID = detailMatch.Groups["Product_Service_ID"].Value.Trim();
                        hd.Date_Of_Service = detailMatch.Groups["Date_Of_Service"].Value.Trim();
                        hd.Adjudication_Date = detailMatch.Groups["Adjudication_Date"].Value.Trim();
                        hd.Adjudication_Time = detailMatch.Groups["Adjudication_Time"].Value.Trim();
                        hd.Original_Claim_Received_Date = detailMatch.Groups["Original_Claim_Received_Date"].Value.Trim();
                        hd.Claim_Sequence_Number = detailMatch.Groups["Claim_Sequence_Number"].Value.Trim();
                        hd.Billing_Cycle_End_Date = detailMatch.Groups["Billing_Cycle_End_Date"].Value.Trim();
                        hd.Communication_Type_Indicator = detailMatch.Groups["Communication_Type_Indicator"].Value.Trim();
                        hd.Place_Of_Service = detailMatch.Groups["Place_Of_Service"].Value.Trim();
                        hd.Patient_Residence = detailMatch.Groups["Patient_Residence"].Value.Trim();
                        hd.Prescription_Origin_Code = detailMatch.Groups["Prescription_Origin_Code"].Value.Trim();
                        hd.Member_Submitted_Claim_Payment_Release_Date = detailMatch.Groups["Member_Submitted_Claim_Payment_Release_Date"].Value.Trim();
                        hd.Claim_Date_Received_Inthemail = detailMatch.Groups["Claim_Date_Received_Inthemail"].Value.Trim();
                        hd.Internal_Mail_Order_Prescription_Service_Reference_Number = detailMatch.Groups["Internal_Mail_Order_Prescription_Service_Reference_Number"].Value.Trim();
                        hd.Version_Number_Of_Claim = detailMatch.Groups["Version_Number_Of_Claim"].Value.Trim();
                        hd.Check_Date = detailMatch.Groups["Check_Date"].Value.Trim();
                        hd.Payment_ID = detailMatch.Groups["Payment_ID"].Value.Trim();
                        hd.Associated_Prescription_Service_Reference_Number = detailMatch.Groups["Associated_Prescription_Service_Reference_Number"].Value.Trim();
                        hd.Associated_Prescription_Service_Date = detailMatch.Groups["Associated_Prescription_Service_Date"].Value.Trim();
                        hd.Quantity_Dispensed = detailMatch.Groups["Quantity_Dispensed"].Value.Trim();
                        hd.Fill_Number = detailMatch.Groups["Fill_Number"].Value.Trim();
                        hd.Days_Supply = detailMatch.Groups["Days_Supply"].Value.Trim();
                        hd.Date_Prescription_Written = detailMatch.Groups["Date_Prescription_Written"].Value.Trim();
                        hd.Dispense_As_Written_Prodcut_Sellection_Code = detailMatch.Groups["Dispense_As_Written_Prodcut_Sellection_Code"].Value.Trim();
                        hd.Number_Of_Refills_Authorized = detailMatch.Groups["Number_Of_Refills_Authorized"].Value.Trim();
                        hd.Special_Packaging_Indicator = detailMatch.Groups["Special_Packaging_Indicator"].Value.Trim();
                        hd.Unit_Of_Measure = detailMatch.Groups["Unit_Of_Measure"].Value.Trim();
                        hd.Level_Of_Service = detailMatch.Groups["Level_Of_Service"].Value.Trim();
                        hd.Dispensing_Status = detailMatch.Groups["Dispensing_Status"].Value.Trim();
                        hd.Quantity_Intended_Dispense = detailMatch.Groups["Quantity_Intended_Dispense"].Value.Trim();
                        hd.Quantity_Prescribed = detailMatch.Groups["Quantity_Prescribed"].Value.Trim();
                        hd.Days_Supply_Intended_Dispense = detailMatch.Groups["Days_Supply_Intended_Dispense"].Value.Trim();
                        hd.Fill_Number_Calculated = detailMatch.Groups["Fill_Number_Calculated"].Value.Trim();
                        hd.Compound_Code = detailMatch.Groups["Compound_Code"].Value.Trim();
                        hd.Compound_Type = detailMatch.Groups["Compound_Type"].Value.Trim();
                        hd.Compound_Route_Of_Administration = detailMatch.Groups["Compound_Route_Of_Administration"].Value.Trim();
                        hd.Route_Of_Administration = detailMatch.Groups["Route_Of_Administration"].Value.Trim();
                        hd.Diagnosis_Code_Qualifier1 = detailMatch.Groups["Diagnosis_Code_Qualifier1"].Value.Trim();
                        hd.Diagnosis_Code1 = detailMatch.Groups["Diagnosis_Code1"].Value.Trim();
                        hd.Diagnosis_Code_Qualifier2 = detailMatch.Groups["Diagnosis_Code_Qualifier2"].Value.Trim();
                        hd.Diagnosis_Code2 = detailMatch.Groups["Diagnosis_Code2"].Value.Trim();
                        hd.Diagnosis_Code_Qualifier3 = detailMatch.Groups["Diagnosis_Code_Qualifier3"].Value.Trim();
                        hd.Diagnosis_Code3 = detailMatch.Groups["Diagnosis_Code3"].Value.Trim();
                        hd.Diagnosis_Code_Qualifier4 = detailMatch.Groups["Diagnosis_Code_Qualifier4"].Value.Trim();
                        hd.Diagnosis_Code4 = detailMatch.Groups["Diagnosis_Code4"].Value.Trim();
                        hd.Diagnosis_Code_Qualifier5 = detailMatch.Groups["Diagnosis_Code_Qualifier5"].Value.Trim();
                        hd.Diagnosis_Code5 = detailMatch.Groups["Diagnosis_Code5"].Value.Trim();
                        hd.Reason_For_Service_Code01 = detailMatch.Groups["Reason_For_Service_Code01"].Value.Trim();
                        hd.Professional_Service_Code01 = detailMatch.Groups["Professional_Service_Code01"].Value.Trim();
                        hd.Result_Of_Service_Code01 = detailMatch.Groups["Result_Of_Service_Code01"].Value.Trim();
                        hd.DUR_Level_Of_Effort01 = detailMatch.Groups["DUR_Level_Of_Effort01"].Value.Trim();
                        hd.Reason_For_Service_Code02 = detailMatch.Groups["Reason_For_Service_Code02"].Value.Trim();
                        hd.Professional_Service_Code02 = detailMatch.Groups["Professional_Service_Code02"].Value.Trim();
                        hd.Result_Of_Service_Code02 = detailMatch.Groups["Result_Of_Service_Code02"].Value.Trim();
                        hd.DUR_Level_Of_Effort02 = detailMatch.Groups["DUR_Level_Of_Effort02"].Value.Trim();
                        hd.Reason_For_Service_Code03 = detailMatch.Groups["Reason_For_Service_Code03"].Value.Trim();
                        hd.Professional_Service_Code03 = detailMatch.Groups["Professional_Service_Code03"].Value.Trim();
                        hd.Result_Of_Service_Code03 = detailMatch.Groups["Result_Of_Service_Code03"].Value.Trim();
                        hd.DUR_Level_Of_Effort03 = detailMatch.Groups["DUR_Level_Of_Effort03"].Value.Trim();
                        hd.Reason_For_Service_Code04 = detailMatch.Groups["Reason_For_Service_Code04"].Value.Trim();
                        hd.Professional_Service_Code04 = detailMatch.Groups["Professional_Service_Code04"].Value.Trim();
                        hd.Result_For_Service_Code04 = detailMatch.Groups["Result_For_Service_Code04"].Value.Trim();
                        hd.DUR_Level_Of_Effort04 = detailMatch.Groups["DUR_Level_Of_Effort04"].Value.Trim();
                        hd.Reason_For_Service_Code05 = detailMatch.Groups["Reason_For_Service_Code05"].Value.Trim();
                        hd.Professional_Service_Code05 = detailMatch.Groups["Professional_Service_Code05"].Value.Trim();
                        hd.Result_Of_Service_Code05 = detailMatch.Groups["Result_Of_Service_Code05"].Value.Trim();
                        hd.DUR_Level_Of_Effort05 = detailMatch.Groups["DUR_Level_Of_Effort05"].Value.Trim();
                        hd.Reason_For_Service_Code06 = detailMatch.Groups["Reason_For_Service_Code06"].Value.Trim();
                        hd.Professional_Service_Code06 = detailMatch.Groups["Professional_Service_Code06"].Value.Trim();
                        hd.Result_Of_Service_Code06 = detailMatch.Groups["Result_Of_Service_Code06"].Value.Trim();
                        hd.DUR_Level_Of_Effort06 = detailMatch.Groups["DUR_Level_Of_Effort06"].Value.Trim();
                        hd.Reason_For_Service_Code07 = detailMatch.Groups["Reason_For_Service_Code07"].Value.Trim();
                        hd.Professional_Service_Code07 = detailMatch.Groups["Professional_Service_Code07"].Value.Trim();
                        hd.Result_Of_Service_Code07 = detailMatch.Groups["Result_Of_Service_Code07"].Value.Trim();
                        hd.DUR_Level_Of_Effort07 = detailMatch.Groups["DUR_Level_Of_Effort07"].Value.Trim();
                        hd.Reason_For_Service_Code08 = detailMatch.Groups["Reason_For_Service_Code08"].Value.Trim();
                        hd.Professional_Service_Code08 = detailMatch.Groups["Professional_Service_Code08"].Value.Trim();
                        hd.Result_For_Service_Code08 = detailMatch.Groups["Result_For_Service_Code08"].Value.Trim();
                        hd.DUR_Level_Of_Effort08 = detailMatch.Groups["DUR_Level_Of_Effort08"].Value.Trim();
                        hd.Reason_For_Service_Code09 = detailMatch.Groups["Reason_For_Service_Code09"].Value.Trim();
                        hd.Professional_Service_Code09 = detailMatch.Groups["Professional_Service_Code09"].Value.Trim();
                        hd.Result_For_Service_Code09 = detailMatch.Groups["Result_For_Service_Code09"].Value.Trim();
                        hd.DUR_Level_Of_Effort09 = detailMatch.Groups["DUR_Level_Of_Effort09"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier = detailMatch.Groups["DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hd.DUR_Coagent_ID = detailMatch.Groups["DUR_Coagent_ID"].Value.Trim();
                        hd.Reject_Override_Code = detailMatch.Groups["Reject_Override_Code"].Value.Trim();
                        hd.Reject_Code1 = detailMatch.Groups["Reject_Code1"].Value.Trim();
                        hd.Reject_Code2 = detailMatch.Groups["Reject_Code2"].Value.Trim();
                        hd.Reject_Code3 = detailMatch.Groups["Reject_Code3"].Value.Trim();
                        hd.Reject_Code4 = detailMatch.Groups["Reject_Code4"].Value.Trim();
                        hd.Reject_Code5 = detailMatch.Groups["Reject_Code5"].Value.Trim();
                        hd.Claim_ID = detailMatch.Groups["Claim_ID"].Value.Trim();
                        hd.Date_Of_Injury = detailMatch.Groups["Date_Of_Injury"].Value.Trim();
                        hd.Database_Indicator = detailMatch.Groups["Database_Indicator"].Value.Trim();
                        hd.Product_Name = detailMatch.Groups["Product_Name"].Value.Trim();
                        hd.Generic_Name = detailMatch.Groups["Generic_Name"].Value.Trim();
                        hd.Product_Strength = detailMatch.Groups["Product_Strength"].Value.Trim();
                        hd.Dosage_Form_Code = detailMatch.Groups["Dosage_Form_Code"].Value.Trim();
                        //(?<Filler3>.{8})
                        hd.Drug_Type = detailMatch.Groups["Drug_Type"].Value.Trim();
                        hd.Maintenance_Drug_Indicator = detailMatch.Groups["Maintenance_Drug_Indicator"].Value.Trim();
                        hd.Drug_Category_Code = detailMatch.Groups["Drug_Category_Code"].Value.Trim();
                        hd.Federal_DEA_Schedule = detailMatch.Groups["Federal_DEA_Schedule"].Value.Trim();
                        hd.Prescription_Over_The_Counter_Indicator = detailMatch.Groups["Prescription_Over_The_Counter_Indicator"].Value.Trim();
                        hd.Submission_Clarification_Code1 = detailMatch.Groups["Submission_Clarification_Code1"].Value.Trim();
                        hd.Submission_Clarification_Code2 = detailMatch.Groups["Submission_Clarification_Code2"].Value.Trim();
                        hd.Submission_Clarification_Code3 = detailMatch.Groups["Submission_Clarification_Code3"].Value.Trim();
                        hd.FDA_Drug_Efficacy_Code = detailMatch.Groups["FDA_Drug_Efficacy_Code"].Value.Trim();
                        hd.Product_Code_Qualifier1 = detailMatch.Groups["Product_Code_Qualifier1"].Value.Trim();
                        hd.Product_Code1 = detailMatch.Groups["Product_Code1"].Value.Trim();
                        hd.Product_Code_Qualifier2 = detailMatch.Groups["Product_Code_Qualifier2"].Value.Trim();
                        hd.Product_Code2 = detailMatch.Groups["Product_Code2"].Value.Trim();
                        hd.Product_Code_Qualifier3 = detailMatch.Groups["Product_Code_Qualifier3"].Value.Trim();
                        hd.Product_Code3 = detailMatch.Groups["Product_Code3"].Value.Trim();
                        hd.Federal_Upper_Limit_Indicator = detailMatch.Groups["Federal_Upper_Limit_Indicator"].Value.Trim();
                        hd.Prescribed_Days_Supply = detailMatch.Groups["Prescribed_Days_Supply"].Value.Trim();
                        hd.Therapeutic_Claim_Code_Qualifier1 = detailMatch.Groups["Therapeutic_Claim_Code_Qualifier1"].Value.Trim();
                        hd.Therapeutic_Claim_Code1 = detailMatch.Groups["Therapeutic_Claim_Code1"].Value.Trim();
                        hd.Therapeutic_Claim_Code_Qualifier2 = detailMatch.Groups["Therapeutic_Claim_Code_Qualifier2"].Value.Trim();
                        hd.Therapeutic_Claim_Code2 = detailMatch.Groups["Therapeutic_Claim_Code2"].Value.Trim();
                        hd.Therapeutic_Claim_Code_Qualifier3 = detailMatch.Groups["Therapeutic_Claim_Code_Qualifier3"].Value.Trim();
                        hd.Therapeutic_Claim_Code3 = detailMatch.Groups["Therapeutic_Claim_Code3"].Value.Trim();
                        hd.Therapeutic_Claim_Code_Qualifier4 = detailMatch.Groups["Therapeutic_Claim_Code_Qualifier4"].Value.Trim();
                        hd.Therapeutic_Claim_Code4 = detailMatch.Groups["Therapeutic_Claim_Code4"].Value.Trim();
                        hd.Formulary_Status = detailMatch.Groups["Formulary_Status"].Value.Trim();
                        hd.Client_Formulary_Flag = detailMatch.Groups["Client_Formulary_Flag"].Value.Trim();
                        hd.Therapeutic_Chapter = detailMatch.Groups["Therapeutic_Chapter"].Value.Trim();
                        hd.Formulary_File_ID = detailMatch.Groups["Formulary_File_ID"].Value.Trim();
                        hd.Formulary_Code_Type = detailMatch.Groups["Formulary_Code_Type"].Value.Trim();
                        hd.Ingradient_Cost_Paid = detailMatch.Groups["Ingradient_Cost_Paid"].Value.Trim();
                        hd.Dispense_Fee_Paid = detailMatch.Groups["Dispense_Fee_Paid"].Value.Trim();
                        hd.Total_Amount_Paid_By_All_Sources = detailMatch.Groups["Total_Amount_Paid_By_All_Sources"].Value.Trim();
                        hd.Amount_Attributed_To_Sales_Tax = detailMatch.Groups["Amount_Attributed_To_Sales_Tax"].Value.Trim();
                        hd.Patient_Pay_Amount = detailMatch.Groups["Patient_Pay_Amount"].Value.Trim();
                        hd.Amount_Of_Copay = detailMatch.Groups["Amount_Of_Copay>"].Value.Trim();
                        hd.Amount_Of_Coinsurance = detailMatch.Groups["Amount_Of_Coinsurance"].Value.Trim();
                        hd.Amount_Attributed_To_Product_Sellection = detailMatch.Groups["Amount_Attributed_To_Product_Sellection"].Value.Trim();
                        hd.Amount_Applied_To_Periodic_Deductible = detailMatch.Groups["Amount_Applied_To_Periodic_Deductible"].Value.Trim();
                        hd.Amount_Attributed_To_Processor_Fee = detailMatch.Groups["Amount_Attributed_To_Processor_Fee"].Value.Trim();
                        hd.Amount_Attributed_To_Provider_Network_Sellection = detailMatch.Groups["Amount_Attributed_To_Provider_Network_Sellection"].Value.Trim();
                        hd.Amount_Attributed_To_Product_Selection_Brand_Drug = detailMatch.Groups["Amount_Attributed_To_Product_Selection_Brand_Drug"].Value.Trim();
                        hd.Amount_Attributed_To_Product_Selection_NonPreferred_Formulary = detailMatch.Groups["Amount_Attributed_To_Product_Selection_NonPreferred_Formulary"].Value.Trim();
                        hd.Amount_Attributed_To_Product_Selection_Brand_NonPreferred_Formulary = detailMatch.Groups["Amount_Attributed_To_Product_Selection_Brand_NonPreferred_Formulary"].Value.Trim();
                        hd.Amount_Attributed_To_Coverage_Gap = detailMatch.Groups["Amount_Attributed_To_Coverage_Gap"].Value.Trim();
                        hd.MAC_Reduced_Indicator = detailMatch.Groups["MAC_Reduced_Indicator"].Value.Trim();
                        hd.Client_Pricing_Basis_Of_Cost = detailMatch.Groups["Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hd.Generic_Indicator = detailMatch.Groups["Generic_Indicator"].Value.Trim();
                        hd.OutofPocket_Apply_Amount = detailMatch.Groups["OutofPocket_Apply_Amount"].Value.Trim();
                        hd.Average_Cost_Per_Quantity_Unit_Price = detailMatch.Groups["Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hd.Average_Generic_Unit_Price = detailMatch.Groups["Average_Generic_Unit_Price"].Value.Trim();
                        hd.Average_Wholesale_Unit_Price = detailMatch.Groups["Average_Wholesale_Unit_Price"].Value.Trim();
                        hd.Federal_Upper_Limit_Unit_Price = detailMatch.Groups["Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hd.Gross_Amount_Due = detailMatch.Groups["Gross_Amount_Due"].Value.Trim();
                        hd.MAC_Price = detailMatch.Groups["MAC_Price"].Value.Trim();
                        hd.Ingredient_Cost_Submitted = detailMatch.Groups["Ingredient_Cost_Submitted"].Value.Trim();
                        hd.Usual_And_Customary_Charge = detailMatch.Groups["Usual_And_Customary_Charge"].Value.Trim();
                        hd.Flat_Sales_Tax_Amount_Paid = detailMatch.Groups["Flat_Sales_Tax_Amount_Paid"].Value.Trim();
                        hd.Percentage_Sales_Tax_Amount_Paid = detailMatch.Groups["Percentage_Sales_Tax_Amount_Paid"].Value.Trim();
                        hd.Percentage_Sales_Tax_Rate_Paid = detailMatch.Groups["Percentage_Sales_Tax_Rate_Paid"].Value.Trim();
                        hd.Percentage_Sales_Tax_Basis_Paid = detailMatch.Groups["Percentage_Sales_Tax_Basis_Paid"].Value.Trim();
                        hd.Incentive_Amount_Paid = detailMatch.Groups["Incentive_Amount_Paid"].Value.Trim();
                        hd.Professional_Service_Fee_Paid = detailMatch.Groups["Professional_Service_Fee_Paid"].Value.Trim();
                        hd.Other_Amount_Paid_Qualifier1 = detailMatch.Groups["Other_Amount_Paid_Qualifier1"].Value.Trim();
                        hd.Other_Amount_Paid1 = detailMatch.Groups["Other_Amount_Paid1"].Value.Trim();
                        hd.Other_Amount_Paid_Qualifier2 = detailMatch.Groups["Other_Amount_Paid_Qualifier2"].Value.Trim();
                        hd.Other_Amount_Paid2 = detailMatch.Groups["Other_Amount_Paid2"].Value.Trim();
                        hd.Other_Amount_Paid_Qualifier3 = detailMatch.Groups["Other_Amount_Paid_Qualifier3"].Value.Trim();
                        hd.Other_Amount_Paid3 = detailMatch.Groups["Other_Amount_Paid3"].Value.Trim();
                        hd.Other_Payer_Amount_Recognized = detailMatch.Groups["Other_Payer_Amount_Recognized"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier1 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier1"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount1 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount1"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier2 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier2"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount2 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount2"].Value.Trim();
                        hd.Net_Amount_Due = detailMatch.Groups["Net_Amount_Due"].Value.Trim();
                        hd.Basis_Of_Reimbursement_Determination = detailMatch.Groups["Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hd.Accumulated_Deductible_Amount = detailMatch.Groups["Accumulated_Deductible_Amount"].Value.Trim();
                        hd.Remaining_Deductible_Amount = detailMatch.Groups["Remaining_Deductible_Amount"].Value.Trim();
                        hd.Remaining_Benefit_Amount = detailMatch.Groups["Remaining_Benefit_Amount"].Value.Trim();
                        hd.Cost_Difference_Amount = detailMatch.Groups["Cost_Difference_Amount"].Value.Trim();
                        hd.Excess_Copay_Amount = detailMatch.Groups["Excess_Copay_Amount"].Value.Trim();
                        hd.Member_Submit_Amount = detailMatch.Groups["Member_Submit_Amount"].Value.Trim();
                        hd.Hold_Harmless_Amount = detailMatch.Groups["Hold_Harmless_Amount"].Value.Trim();
                        hd.Amount_Exceeding_Periodic_Benefit_Maximum = detailMatch.Groups["Amount_Exceeding_Periodic_Benefit_Maximum"].Value.Trim();
                        hd.Basis_Of_Calculation_Dispensing_Fee = detailMatch.Groups["Basis_Of_Calculation_Dispensing_Fee"].Value.Trim();
                        hd.Basis_Of_Calculation_Copay = detailMatch.Groups["Basis_Of_Calculation_Copay"].Value.Trim();
                        hd.Basis_Of_Calculation_Flat_Sales_Tax = detailMatch.Groups["Basis_Of_Calculation_Flat_Sales_Tax"].Value.Trim();
                        hd.Basis_Of_Calculation_Percentage_Sales_Tax = detailMatch.Groups["Basis_Of_Calculation_Percentage_Sales_Tax"].Value.Trim();
                        hd.Basis_Of_Calculation_Coinsurance = detailMatch.Groups["Basis_Of_Calculation_Coinsurance"].Value.Trim();
                        hd.Tax_Excempt_Indicator = detailMatch.Groups["Tax_Excempt_Indicator"].Value.Trim();
                        hd.Patient_Formulary_Rebate_Amount = detailMatch.Groups["Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hd.Medicare_Recovery_Indicator = detailMatch.Groups["Medicare_Recovery_Indicator"].Value.Trim();
                        hd.Medicare_Recovery_Dispensing_Indicator = detailMatch.Groups["Medicare_Recovery_Dispensing_Indicator"].Value.Trim();
                        hd.Patient_Spend_Down_Amount = detailMatch.Groups["Patient_Spend_Down_Amount"].Value.Trim();
                        hd.Health_Care_Reimbursement_Account_Amount_Applied = detailMatch.Groups["Health_Care_Reimbursement_Account_Amount_Applied"].Value.Trim();
                        hd.Health_Care_Reimbursement_Account_Amount_Remaining = detailMatch.Groups["Health_Care_Reimbursement_Account_Amount_Remaining"].Value.Trim();
                        hd.Administrative_Fee_Effect_Indicator = detailMatch.Groups["Administrative_Fee_Effect_Indicator"].Value.Trim();
                        hd.Administrative_Fee_Amount = detailMatch.Groups["Administrative_Fee_Amount"].Value.Trim();
                        hd.Invoiced_Amount = detailMatch.Groups["Invoiced_Amount"].Value.Trim();
                        //(?<Filler4>.{10})
                        hd.Spending_Account_Amount_Remaining = detailMatch.Groups["Spending_Account_Amount_Remaining"].Value.Trim();
                        hd.Health_Plan_Funded_Assistance_Amount = detailMatch.Groups["Health_Plan_Funded_Assistance_Amount"].Value.Trim();
                        hd.Prior_Authorization_Type_Code = detailMatch.Groups["Prior_Authorization_Type_Code"].Value.Trim();
                        hd.Prior_Authorization_Number_Submitted = detailMatch.Groups["Prior_Authorization_Number_Submitted"].Value.Trim();
                        hd.Prior_Authorization_Number_Assigned = detailMatch.Groups["Prior_Authorization_Number_Assigned"].Value.Trim();
                        hd.Processor_Defined_Prior_Authorization_Reason_Code = detailMatch.Groups["Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hd.Adjustment_Reason_Code = detailMatch.Groups["Adjustment_Reason_Code"].Value.Trim();
                        hd.Adjustment_Type = detailMatch.Groups["Adjustment_Type"].Value.Trim();
                        hd.Transaction_ID_Cross_Reference = detailMatch.Groups["Transaction_ID_Cross_Reference"].Value.Trim();
                        hd.COB_Carrier_Submit_Amount = detailMatch.Groups["COB_Carrier_Submit_Amount"].Value.Trim();
                        hd.Eligibility_COB_Indicator = detailMatch.Groups["Eligibility_COB_Indicator"].Value.Trim();
                        hd.COB_Primary_Claim_Type = detailMatch.Groups["COB_Primary_Claim_Type"].Value.Trim();
                        hd.COB_Primary_Payer_ID = detailMatch.Groups["COB_Primary_Payer_ID"].Value.Trim();
                        //(?<Filler5>.{8})
                        hd.COB_Primary_Payer_Amount_Paid = detailMatch.Groups["COB_Primary_Payer_Amount_Paid"].Value.Trim();
                        hd.COB_Primary_Payer_Deductible = detailMatch.Groups["COB_Primary_Payer_Deductible"].Value.Trim();
                        hd.COB_Primary_Payer_Coinsurance = detailMatch.Groups["COB_Primary_Payer_Coinsurance"].Value.Trim();
                        hd.COB_Primary_Payer_Copay = detailMatch.Groups["COB_Primary_Payer_Copay"].Value.Trim();
                        hd.COB_Secondary_Payer_ID = detailMatch.Groups["COB_Secondary_Payer_ID"].Value.Trim();
                        //(?<Filler6>.{8})
                        hd.COB_Secondary_Payer_Amount_Paid = detailMatch.Groups["COB_Secondary_Payer_Amount_Paid"].Value.Trim();
                        hd.COB_Secondary_Payer_Deductible = detailMatch.Groups["COB_Secondary_Payer_Deductible"].Value.Trim();
                        hd.COB_Secondary_Payer_Coinsurance = detailMatch.Groups["COB_Secondary_Payer_Coinsurance"].Value.Trim();
                        hd.COB_Secondary_Payer_Copay = detailMatch.Groups["COB_Secondary_Payer_Copay"].Value.Trim();
                        hd.Transaction_ID = detailMatch.Groups["Transaction_ID"].Value.Trim();
                        hd.Authorization_Number = detailMatch.Groups["Authorization_Number"].Value.Trim();
                        hd.Client_Specific_Data = detailMatch.Groups["Client_Specific_Data"].Value.Trim();
                        hd.Processor_Specific_Data = detailMatch.Groups["Processor_Specific_Data"].Value.Trim();
                        hd.CMS_PartD_Defined_Qualified_Facility = detailMatch.Groups["CMS_PartD_Defined_Qualified_Facility"].Value.Trim();
                        hd.Benefit_Stage_Qualifier1 = detailMatch.Groups["Benefit_Stage_Qualifier1"].Value.Trim();
                        hd.Benefit_Stage_Amount1 = detailMatch.Groups["Benefit_Stage_Amount1"].Value.Trim();
                        hd.Benefit_Stage_Qualifier2 = detailMatch.Groups["Benefit_Stage_Qualifier2"].Value.Trim();
                        hd.Benefit_Stage_Amount2 = detailMatch.Groups["Benefit_Stage_Amount2"].Value.Trim();
                        hd.Benefit_Stage_Qualifier3 = detailMatch.Groups["Benefit_Stage_Qualifier3"].Value.Trim();
                        hd.Benefit_Stage_Amount3 = detailMatch.Groups["Benefit_Stage_Amount3"].Value.Trim();
                        hd.Benefit_Stage_Qualifier4 = detailMatch.Groups["Benefit_Stage_Qualifier4"].Value.Trim();
                        hd.Benefit_Stage_Amount4 = detailMatch.Groups["Benefit_Stage_Amount4"].Value.Trim();
                        hd.Invoiced_Date = detailMatch.Groups["Invoiced_Date"].Value.Trim();
                        hd.Outofpocket_Remaining_Amount = detailMatch.Groups["Outofpocket_Remaining_Amount"].Value.Trim();
                        hd.Card_Holder_ID_Alternate = detailMatch.Groups["Card_Holder_ID_Alternate"].Value.Trim();
                        hd.Number_Of_Generic_Manufacturers = detailMatch.Groups["Number_Of_Generic_Manufacturers"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier1 = detailMatch.Groups["DUR_Coagent_ID_Qualifier1"].Value.Trim();
                        hd.DUR_Coagent_ID1 = detailMatch.Groups["DUR_Coagent_ID1"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier2 = detailMatch.Groups["DUR_Coagent_ID_Qualifier2"].Value.Trim();
                        hd.DUR_Coagent_ID2 = detailMatch.Groups["DUR_Coagent_ID2"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier3 = detailMatch.Groups["DUR_Coagent_ID_Qualifier3"].Value.Trim();
                        hd.DUR_Coagent_ID3 = detailMatch.Groups["DUR_Coagent_ID3"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier4 = detailMatch.Groups["DUR_Coagent_ID_Qualifier4"].Value.Trim();
                        hd.DUR_Coagent_ID4 = detailMatch.Groups["DUR_Coagent_ID4"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier5 = detailMatch.Groups["DUR_Coagent_ID_Qualifier5"].Value.Trim();
                        hd.DUR_Coagent_ID5 = detailMatch.Groups["DUR_Coagent_ID5"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier6 = detailMatch.Groups["DUR_Coagent_ID_Qualifier6"].Value.Trim();
                        hd.DUR_Coagent_ID6 = detailMatch.Groups["DUR_Coagent_ID6"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier7 = detailMatch.Groups["DUR_Coagent_ID_Qualifier7"].Value.Trim();
                        hd.DUR_Coagent_ID7 = detailMatch.Groups["DUR_Coagent_ID7"].Value.Trim();
                        hd.DUR_Coagent_ID_Qualifier8 = detailMatch.Groups["DUR_Coagent_ID_Qualifier8"].Value.Trim();
                        hd.DUR_Coagent_ID8 = detailMatch.Groups["DUR_Coagent_ID8"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier01 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier01"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount01 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount01"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier02 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier02"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount02 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount02"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier03 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier03"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount03 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount03"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier04 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier04"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount04 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount04"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier05 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier05"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount05 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount05"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier06 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier06"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount06 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount06"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier07 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier07"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount07 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount07"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier08 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier08"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount08 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount08"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier09 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier09"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount09 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount09"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount_Qualifier10 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount_Qualifier10"].Value.Trim();
                        hd.Other_Payer_Patient_Responsibility_Amount10 = detailMatch.Groups["Other_Payer_Patient_Responsibility_Amount10"].Value.Trim();
                        hd.Specialty_Claim_Indicator = detailMatch.Groups["Specialty_Claim_Indicator"].Value.Trim();
                        hd.Member_Submitted_Claim_Reject_Code1 = detailMatch.Groups["Member_Submitted_Claim_Reject_Code1"].Value.Trim();
                        hd.Member_Submitted_Claim_Reject_Code2 = detailMatch.Groups["Member_Submitted_Claim_Reject_Code2"].Value.Trim();
                        hd.Member_Submitted_Claim_Reject_Code3 = detailMatch.Groups["Member_Submitted_Claim_Reject_Code3"].Value.Trim();
                        hd.Member_Submitted_Claim_Reject_Code4 = detailMatch.Groups["Member_Submitted_Claim_Reject_Code4"].Value.Trim();
                        hd.Member_Submitted_Claim_Reject_Code5 = detailMatch.Groups["Member_Submitted_Claim_Reject_Code5"].Value.Trim();
                        hd.Copay_Waiver_Amount = detailMatch.Groups["Copay_Waiver_Amount"].Value.Trim();
                        hd.CMS_PartD_Contract_ID = detailMatch.Groups["CMS_PartD_Contract_ID"].Value.Trim();
                        hd.Medicare_PartD_Plan_Benefit_Package = detailMatch.Groups["Medicare_PartD_Plan_Benefit_Package"].Value.Trim();
                        hd.Medicare_Drug_Coverage_Code = detailMatch.Groups["Medicare_Drug_Coverage_Code"].Value.Trim();
                        hd.AddedDate = DateTime.Now;
                        DetailID = DataAccess.SaveHisDetail(ref hd);
                        continue;
                    }
                    Match compound1Match = oRxParse_Compound1.Match(line);
                    if (compound1Match.Success)
                    {
                        HisCompound1 hc1 = new HisCompound1();
                        hc1.DetailID = DetailID;
                        hc1.RecordType = "CD";
                        hc1.Prescription_Reference_Number_Qualifier = compound1Match.Groups["Prescription_Reference_Number_Qualifier"].Value.Trim();
                        hc1.Prescription_Reference_Number = compound1Match.Groups["Prescription_Reference_Number"].Value.Trim();
                        hc1.Compound_Ingredient_Component_Count = compound1Match.Groups["Compound_Ingredient_Component_Count"].Value.Trim();
                        hc1.First_Compound_Product_ID_Qualifier = compound1Match.Groups["First_Compound_Product_ID_Qualifier"].Value.Trim();
                        hc1.First_Compound_Product_ID = compound1Match.Groups["First_Compound_Product_ID"].Value.Trim();
                        hc1.First_Compound_Ingredient_Quantity = compound1Match.Groups["First_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.First_Compound_Ingredient_Drug_Cost = compound1Match.Groups["First_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.First_Compound_Ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["First_Compound_Ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.First_Client_Formulary_Flag = compound1Match.Groups["First_Client_Formulary_Flag"].Value.Trim();
                        hc1.First_Product_Name = compound1Match.Groups["First_Product_Name"].Value.Trim();
                        hc1.First_Generic_Name = compound1Match.Groups["First_Generic_Name"].Value.Trim();
                        hc1.First_Product_Strength = compound1Match.Groups["First_Product_Strength"].Value.Trim();
                        hc1.First_Dosage_Form_Code = compound1Match.Groups["First_Dosage_Form_Code"].Value.Trim();
                        hc1.First_Database_Indicator = compound1Match.Groups["First_Database_Indicator"].Value.Trim();
                        hc1.First_Drug_Type = compound1Match.Groups["First_Drug_Type"].Value.Trim();
                        hc1.First_Formulary_Status = compound1Match.Groups["First_Formulary_Status"].Value.Trim();
                        hc1.First_Drug_Category_Code = compound1Match.Groups["First_Drug_Category_Code"].Value.Trim();
                        hc1.First_Federal_DEA_Schedule = compound1Match.Groups["First_Federal_DEA_Schedule"].Value.Trim();
                        hc1.First_FDA_Drug_Efficacy_Code = compound1Match.Groups["First_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.First_Product_Code_Qualifier1 = compound1Match.Groups["First_Product_Code_Qualifier1"].Value.Trim();
                        hc1.First_Product_Code1 = compound1Match.Groups["First_Product_Code1"].Value.Trim();
                        hc1.First_Product_Code_Qualifier2 = compound1Match.Groups["First_Product_Code_Qualifier2"].Value.Trim();
                        hc1.First_Product_Code2 = compound1Match.Groups["First_Product_Code2"].Value.Trim();
                        hc1.First_Product_Code_Qualifier3 = compound1Match.Groups["First_Product_Code_Qualifier3"].Value.Trim();
                        hc1.First_Product_Code3 = compound1Match.Groups["First_Product_Code3"].Value.Trim();
                        hc1.First_Federal_Upper_Limit_Indicator = compound1Match.Groups["First_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["First_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code1 = compound1Match.Groups["First_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["First_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code2 = compound1Match.Groups["First_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["First_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code3 = compound1Match.Groups["First_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["First_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.First_Therapeutic_Class_Code4 = compound1Match.Groups["First_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.First_Special_Packaging_Indicator = compound1Match.Groups["First_Special_Packaging_Indicator"].Value.Trim();
                        hc1.First_Unit_Of_Measure = compound1Match.Groups["First_Unit_Of_Measure"].Value.Trim();
                        hc1.First_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["First_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.First_MAC_Reduced_Indicator = compound1Match.Groups["First_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.First_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["First_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.First_DUR_Coagent_ID_Qualifier = compound1Match.Groups["First_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.First_DUR_Coagent_ID = compound1Match.Groups["First_DUR_Coagent_ID"].Value.Trim();
                        hc1.First_Generic_Indicator = compound1Match.Groups["First_Generic_Indicator"].Value.Trim();
                        hc1.First_Plan_Cutback_Reason_Code = compound1Match.Groups["First_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.First_Therapeutic_Chapter = compound1Match.Groups["First_Therapeutic_Chapter"].Value.Trim();
                        hc1.First_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["First_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.First_Average_Generic_Unit_Price = compound1Match.Groups["First_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.First_Average_Wholesale_Unit_Price = compound1Match.Groups["First_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.First_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["First_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.First_MAC_Price = compound1Match.Groups["First_MAC_Price"].Value.Trim();
                        hc1.First_Basis_Of_Reimbursement_Determination = compound1Match.Groups["First_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.First_Patient_Formulary_Rebate_Amount = compound1Match.Groups["First_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Second_Compound_ID_Qualifier = compound1Match.Groups["Second_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Second_Compound_ID = compound1Match.Groups["Second_Compound_ID"].Value.Trim();
                        hc1.Second_Compound_Ingredient_Quantity = compound1Match.Groups["Second_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Second_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Second_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Second_Compound_Ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Second_Compound_Ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Second_Client_Formulary_Flag = compound1Match.Groups["Second_Client_Formulary_Flag"].Value.Trim();
                        hc1.Second_Product_Name = compound1Match.Groups["Second_Product_Name"].Value.Trim();
                        hc1.Second_Generic_Name = compound1Match.Groups["Second_Generic_Name"].Value.Trim();
                        hc1.Second_Product_Strength = compound1Match.Groups["Second_Product_Strength"].Value.Trim();
                        hc1.Second_Dosage_Form_Code = compound1Match.Groups["Second_Dosage_Form_Code"].Value.Trim();
                        hc1.Second_Database_Indicator = compound1Match.Groups["Second_Database_Indicator"].Value.Trim();
                        hc1.Second_Drug_Type = compound1Match.Groups["Second_Drug_Type"].Value.Trim();
                        hc1.Second_Formulary_Status = compound1Match.Groups["Second_Formulary_Status"].Value.Trim();
                        hc1.Second_Drug_Category_Code = compound1Match.Groups["Second_Drug_Category_Code"].Value.Trim();
                        hc1.Second_Federal_DEA_Schedule = compound1Match.Groups["Second_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Second_FDA_Drug_Efficacy_Code = compound1Match.Groups["Second_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Second_Product_Code_Qualifier1 = compound1Match.Groups["Second_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Second_Product_Code1 = compound1Match.Groups["Second_Product_Code1"].Value.Trim();
                        hc1.Second_Product_Code_Qualifier2 = compound1Match.Groups["Second_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Second_Product_Code2 = compound1Match.Groups["Second_Product_Code2"].Value.Trim();
                        hc1.Second_Product_Code_Qualifier3 = compound1Match.Groups["Second_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Second_Product_Code3 = compound1Match.Groups["Second_Product_Code3"].Value.Trim();
                        hc1.Second_Federal_Upper_Limit_Indicator = compound1Match.Groups["Second_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Second_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code1 = compound1Match.Groups["Second_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Second_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code2 = compound1Match.Groups["Second_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Second_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code3 = compound1Match.Groups["Second_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Second_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Second_Therapeutic_Class_Code4 = compound1Match.Groups["Second_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Second_Special_Packaging_Indicator = compound1Match.Groups["Second_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Second_Unit_Of_Measure = compound1Match.Groups["Second_Unit_Of_Measure"].Value.Trim();
                        hc1.Second_Proceddor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Second_Proceddor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Second_MAC_Reduced_Indicator = compound1Match.Groups["Second_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Second_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Second_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Second_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Second_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Second_DUR_Coagent_ID = compound1Match.Groups["Second_DUR_Coagent_ID"].Value.Trim();
                        hc1.Second_Generic_Indicator = compound1Match.Groups["Second_Generic_Indicator"].Value.Trim();
                        hc1.Second_Plan_Cutback_Reason_Code = compound1Match.Groups["Second_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Second_Therapeutic_Chapter = compound1Match.Groups["Second_Therapeutic_Chapter"].Value.Trim();
                        hc1.Second_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Second_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Second_Average_Generic_Unit_Price = compound1Match.Groups["Second_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Second_Average_Wholesale_Unit_Price = compound1Match.Groups["Second_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Second_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Second_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Second_MAC_Price = compound1Match.Groups["Second_MAC_Price"].Value.Trim();
                        hc1.Second_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Second_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Second_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Second_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Third_Compound_ID_Qualifier = compound1Match.Groups["Third_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Third_Compound_ID = compound1Match.Groups["Third_Compound_ID"].Value.Trim();
                        hc1.Third_Compound_Ingredient_Quantity = compound1Match.Groups["Third_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Third_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Third_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Third_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Third_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Third_Client_Formulary_Flag = compound1Match.Groups["Third_Client_Formulary_Flag"].Value.Trim();
                        hc1.Third_Product_Name = compound1Match.Groups["Third_Product_Name"].Value.Trim();
                        hc1.Third_Generic_Name = compound1Match.Groups["Third_Generic_Name"].Value.Trim();
                        hc1.Third_Product_Strength = compound1Match.Groups["Third_Product_Strength"].Value.Trim();
                        hc1.Third_Dosage_Form_Code = compound1Match.Groups["Third_Dosage_Form_Code"].Value.Trim();
                        hc1.Third_Database_Indicator = compound1Match.Groups["Third_Database_Indicator"].Value.Trim();
                        hc1.Third_Drug_Type = compound1Match.Groups["Third_Drug_Type"].Value.Trim();
                        hc1.Third_Formulary_Status = compound1Match.Groups["Third_Formulary_Status"].Value.Trim();
                        hc1.Third_Drug_Category_Code = compound1Match.Groups["Third_Drug_Category_Code"].Value.Trim();
                        hc1.Third_Federal_DEA_Schedule = compound1Match.Groups["Third_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Third_FDA_Drug_Efficacy_Code = compound1Match.Groups["Third_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Third_Product_Code_Qualifier1 = compound1Match.Groups["Third_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Third_Product_Code1 = compound1Match.Groups["Third_Product_Code1"].Value.Trim();
                        hc1.Third_Product_Code_Qualifier2 = compound1Match.Groups["Third_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Third_Product_Code2 = compound1Match.Groups["Third_Product_Code2"].Value.Trim();
                        hc1.Third_Product_Code_Qualifier3 = compound1Match.Groups["Third_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Third_Product_Code3 = compound1Match.Groups["Third_Product_Code3"].Value.Trim();
                        hc1.Third_Federal_Upper_Limit_Indicator = compound1Match.Groups["Third_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Third_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code1 = compound1Match.Groups["Third_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Third_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code2 = compound1Match.Groups["Third_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Third_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code3 = compound1Match.Groups["Third_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Third_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Third_Therapeutic_Class_Code4 = compound1Match.Groups["Third_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Third_Special_Packaging_Indicator = compound1Match.Groups["Third_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Third_Unit_Of_Measure = compound1Match.Groups["Third_Unit_Of_Measure"].Value.Trim();
                        hc1.Third_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Third_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Third_MAC_Reduced_Indicator = compound1Match.Groups["Third_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Third_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Third_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Third_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Third_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Third_DUR_Coagent_ID = compound1Match.Groups["Third_DUR_Coagent_ID"].Value.Trim();
                        hc1.Third_Generic_Indicator = compound1Match.Groups["Third_Generic_Indicator"].Value.Trim();
                        hc1.Third_Plan_Cutback_Reason_Code = compound1Match.Groups["Third_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Third_Therapeutic_Chapter = compound1Match.Groups["Third_Therapeutic_Chapter"].Value.Trim();
                        hc1.Third_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Third_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Third_Average_Generic_Unit_Price = compound1Match.Groups["Third_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Third_Average_Wholesale_Unit_Price = compound1Match.Groups["Third_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Third_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Third_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Third_MAC_Price = compound1Match.Groups["Third_MAC_Price"].Value.Trim();
                        hc1.Third_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Third_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Third_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Third_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Fourth_Compound_ID_Qualifier = compound1Match.Groups["Fourth_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Fourth_Compound_ID = compound1Match.Groups["Fourth_Compound_ID"].Value.Trim();
                        hc1.Fourth_Compound_Ingredient_Quantity = compound1Match.Groups["Fourth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Fourth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Fourth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Fourth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Fourth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Fourth_Client_Formulary_Flag = compound1Match.Groups["Fourth_Client_Formulary_Flag"].Value.Trim();
                        hc1.Fourth_Product_Name = compound1Match.Groups["Fourth_Product_Name"].Value.Trim();
                        hc1.Fourth_Generic_Name = compound1Match.Groups["Fourth_Generic_Name"].Value.Trim();
                        hc1.Fourth_Product_Strength = compound1Match.Groups["Fourth_Product_Strength"].Value.Trim();
                        hc1.Fourth_Dosage_Form_Code = compound1Match.Groups["Fourth_Dosage_Form_Code"].Value.Trim();
                        hc1.Fourth_Database_Indicator = compound1Match.Groups["Fourth_Database_Indicator"].Value.Trim();
                        hc1.Fourth_Drug_Type = compound1Match.Groups["Fourth_Drug_Type"].Value.Trim();
                        hc1.Fourth_Formulary_Status = compound1Match.Groups["Fourth_Formulary_Status"].Value.Trim();
                        hc1.Fourth_Drug_Category_Code = compound1Match.Groups["Fourth_Drug_Category_Code"].Value.Trim();
                        hc1.Fourth_Federal_DEA_Schedule = compound1Match.Groups["Fourth_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Fourth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Fourth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Fourth_Product_Code_Qualifier1 = compound1Match.Groups["Fourth_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Fourth_Product_Code1 = compound1Match.Groups["Fourth_Product_Code1"].Value.Trim();
                        hc1.Fourth_Product_Code_Qualifier2 = compound1Match.Groups["Fourth_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Fourth_Product_Code2 = compound1Match.Groups["Fourth_Product_Code2"].Value.Trim();
                        hc1.Fourth_Product_Code_Qualifier3 = compound1Match.Groups["Fourth_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Fourth_Product_Code3 = compound1Match.Groups["Fourth_Product_Code3"].Value.Trim();
                        hc1.Fourth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Fourth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Fourth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code1 = compound1Match.Groups["Fourth_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Fourth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code2 = compound1Match.Groups["Fourth_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Fourth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code3 = compound1Match.Groups["Fourth_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Fourth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Fourth_Therapeutic_Class_Code4 = compound1Match.Groups["Fourth_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Fourth_Special_Packaging_Indicator = compound1Match.Groups["Fourth_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Fourth_Unit_Of_Measure = compound1Match.Groups["Fourth_Unit_Of_Measure"].Value.Trim();
                        hc1.Fourth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Fourth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Fourth_MAC_Reduced_Indicator = compound1Match.Groups["Fourth_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Fourth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Fourth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Fourth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Fourth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Fourth_DUR_Coagent_ID = compound1Match.Groups["Fourth_DUR_Coagent_ID"].Value.Trim();
                        hc1.Fourth_Generic_Indicator = compound1Match.Groups["Fourth_Generic_Indicator"].Value.Trim();
                        hc1.Fourth_Plan_Cutback_Reason_Code = compound1Match.Groups["Fourth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Fourth_Therapeutic_Chapter = compound1Match.Groups["Fourth_Therapeutic_Chapter"].Value.Trim();
                        hc1.Fourth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Fourth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Fourth_Average_Generic_Unit_Price = compound1Match.Groups["Fourth_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Fourth_Average_Wholesale_Unit_Price = compound1Match.Groups["Fourth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Fourth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Fourth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Fourth_MAC_Price = compound1Match.Groups["Fourth_MAC_Price"].Value.Trim();
                        hc1.Fourth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Fourth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Fourth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Fourth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Fifth_Compound_ID_Qualifier = compound1Match.Groups["Fifth_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Fifth_Compound_ID = compound1Match.Groups["Fifth_Compound_ID"].Value.Trim();
                        hc1.Fifth_Compound_Ingredient_Quantity = compound1Match.Groups["Fifth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Fifth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Fifth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Fifth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Fifth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Fifth_Client_Formulary_Flag = compound1Match.Groups["Fifth_Client_Formulary_Flag"].Value.Trim();
                        hc1.Fifth_Product_Name = compound1Match.Groups["Fifth_Product_Name"].Value.Trim();
                        hc1.Fifth_Generic_Name = compound1Match.Groups["Fifth_Generic_Name"].Value.Trim();
                        hc1.Fifth_Product_Strength = compound1Match.Groups["Fifth_Product_Strength"].Value.Trim();
                        hc1.Fifth_Dosage_Form_Code = compound1Match.Groups["Fifth_Dosage_Form_Code"].Value.Trim();
                        hc1.Fifth_Database_Indicator = compound1Match.Groups["Fifth_Database_Indicator"].Value.Trim();
                        hc1.Fifth_Drug_Type = compound1Match.Groups["Fifth_Drug_Type"].Value.Trim();
                        hc1.Fifth_Formulary_Status = compound1Match.Groups["Fifth_Formulary_Status"].Value.Trim();
                        hc1.Fifth_Drug_Category_Code = compound1Match.Groups["Fifth_Drug_Category_Code"].Value.Trim();
                        hc1.Fifth_Federal_DEA_Schedule = compound1Match.Groups["Fifth_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Fifth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Fifth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Fifth_Product_Code_Qualifier1 = compound1Match.Groups["Fifth_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Fifth_Product_Code1 = compound1Match.Groups["Fifth_Product_Code1"].Value.Trim();
                        hc1.Fifth_Product_Code_Qualifier2 = compound1Match.Groups["Fifth_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Fifth_Product_Code2 = compound1Match.Groups["Fifth_Product_Code2"].Value.Trim();
                        hc1.Fifth_Product_Code_Qualifier3 = compound1Match.Groups["Fifth_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Fifth_Product_Code3 = compound1Match.Groups["Fifth_Product_Code3"].Value.Trim();
                        hc1.Fifth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Fifth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Fifth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code1 = compound1Match.Groups["Fifth_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Fifth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code2 = compound1Match.Groups["Fifth_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Fifth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code3 = compound1Match.Groups["Fifth_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Fifth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Fifth_Therapeutic_Class_Code4 = compound1Match.Groups["Fifth_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Fifth_Special_Packaging_Indicator = compound1Match.Groups["Fifth_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Fifth_Unit_Of_Measure = compound1Match.Groups["Fifth_Unit_Of_Measure"].Value.Trim();
                        hc1.Fifth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Fifth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Fifth_MAC_Reduced_Indicator = compound1Match.Groups["Fifth_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Fifth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Fifth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Fifth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Fifth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Fifth_DUR_Coagent_ID = compound1Match.Groups["Fifth_DUR_Coagent_ID"].Value.Trim();
                        hc1.Fifth_Generic_Indicator = compound1Match.Groups["Fifth_Generic_Indicator"].Value.Trim();
                        hc1.Fifth_Plan_Cutback_Reason_Code = compound1Match.Groups["Fifth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Fifth_Therapeutic_Chapter = compound1Match.Groups["Fifth_Therapeutic_Chapter"].Value.Trim();
                        hc1.Fifth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Fifth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Fifth_Average_Generic_Unit_Price = compound1Match.Groups["Fifth_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Fifth_Average_Wholesale_Unit_Price = compound1Match.Groups["Fifth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Fifth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Fifth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Fifth_MAC_Price = compound1Match.Groups["Fifth_MAC_Price"].Value.Trim();
                        hc1.Fifth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Fifth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Fifth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Fifth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Sixth_Compound_ID_Qualifier = compound1Match.Groups["Sixth_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Sixth_Compound_ID = compound1Match.Groups["Sixth_Compound_ID"].Value.Trim();
                        hc1.Sixth_Compound_Ingredient_Quantity = compound1Match.Groups["Sixth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Sixth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Sixth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Sixth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Sixth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Sixth_Client_Formulary_Flag = compound1Match.Groups["Sixth_Client_Formulary_Flag"].Value.Trim();
                        hc1.Sixth_Product_Name = compound1Match.Groups["Sixth_Product_Name"].Value.Trim();
                        hc1.Sixth_Generic_Name = compound1Match.Groups["Sixth_Generic_Name"].Value.Trim();
                        hc1.Sixth_Product_Strength = compound1Match.Groups["Sixth_Product_Strength"].Value.Trim();
                        hc1.Sixth_Dosage_Form_Code = compound1Match.Groups["Sixth_Dosage_Form_Code"].Value.Trim();
                        hc1.Sixth_Database_Indicator = compound1Match.Groups["Sixth_Database_Indicator"].Value.Trim();
                        hc1.Sixth_Drug_Type = compound1Match.Groups["Sixth_Drug_Type"].Value.Trim();
                        hc1.Sixth_Formulary_Status = compound1Match.Groups["Sixth_Formulary_Status"].Value.Trim();
                        hc1.Sixth_Drug_Category_Code = compound1Match.Groups["Sixth_Drug_Category_Code"].Value.Trim();
                        hc1.Sixth_Federal_DEA_Schedule = compound1Match.Groups["Sixth_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Sixth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Sixth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Sixth_Product_Code_Qualifier1 = compound1Match.Groups["Sixth_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Sixth_Product_Code1 = compound1Match.Groups["Sixth_Product_Code1"].Value.Trim();
                        hc1.Sixth_Product_Code_Qualifier2 = compound1Match.Groups["Sixth_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Sixth_Product_Code2 = compound1Match.Groups["Sixth_Product_Code2"].Value.Trim();
                        hc1.Sixth_Product_Code_Qualifier3 = compound1Match.Groups["Sixth_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Sixth_Product_Code3 = compound1Match.Groups["Sixth_Product_Code3"].Value.Trim();
                        hc1.Sixth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Sixth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Sixth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code1 = compound1Match.Groups["Sixth_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Sixth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code2 = compound1Match.Groups["Sixth_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Sixth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code3 = compound1Match.Groups["Sixth_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Sixth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Sixth_Therapeutic_Class_Code4 = compound1Match.Groups["Sixth_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Sixth_Special_Packaging_Indicator = compound1Match.Groups["Sixth_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Sixth_Unit_Of_Measure = compound1Match.Groups["Sixth_Unit_Of_Measure"].Value.Trim();
                        hc1.Sixth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Sixth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Sixth_MAC_Reduced_Indicator = compound1Match.Groups["Sixth_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Sixth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Sixth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Sixth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Sixth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Sixth_DUR_Coagent_ID = compound1Match.Groups["Sixth_DUR_Coagent_ID"].Value.Trim();
                        hc1.Sixth_Generic_Indicator = compound1Match.Groups["Sixth_Generic_Indicator"].Value.Trim();
                        hc1.Sixth_Plan_Cutback_Reason_Code = compound1Match.Groups["Sixth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Sixth_Therapeutic_Chapter = compound1Match.Groups["Sixth_Therapeutic_Chapter"].Value.Trim();
                        hc1.Sixth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Sixth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Sixth_Average_Generic_Unit_Price = compound1Match.Groups["Sixth_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Sixth_Average_Wholesale_Unit_Price = compound1Match.Groups["Sixth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Sixth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Sixth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Sixth_MAC_Price = compound1Match.Groups["Sixth_MAC_Price"].Value.Trim();
                        hc1.Sixth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Sixth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Sixth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Sixth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Seventh_Compound_ID_Qualifier = compound1Match.Groups["Seventh_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Seventh_Compound_ID = compound1Match.Groups["Seventh_Compound_ID"].Value.Trim();
                        hc1.Seventh_Compound_Ingredient_Quantity = compound1Match.Groups["Seventh_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Seventh_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Seventh_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Seventh_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Seventh_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Seventh_Client_Formulary_Flag = compound1Match.Groups["Seventh_Client_Formulary_Flag"].Value.Trim();
                        hc1.Seventh_Product_Name = compound1Match.Groups["Seventh_Product_Name"].Value.Trim();
                        hc1.Seventh_Generic_Name = compound1Match.Groups["Seventh_Generic_Name"].Value.Trim();
                        hc1.Seventh_Product_Strength = compound1Match.Groups["Seventh_Product_Strength"].Value.Trim();
                        hc1.Seventh_Dosage_Form_Code = compound1Match.Groups["Seventh_Dosage_Form_Code"].Value.Trim();
                        hc1.Seventh_Database_Indicator = compound1Match.Groups["Seventh_Database_Indicator"].Value.Trim();
                        hc1.Seventh_Drug_Type = compound1Match.Groups["Seventh_Drug_Type"].Value.Trim();
                        hc1.Seventh_Formulary_Status = compound1Match.Groups["Seventh_Formulary_Status"].Value.Trim();
                        hc1.Seventh_Drug_Category_Code = compound1Match.Groups["Seventh_Drug_Category_Code"].Value.Trim();
                        hc1.Seventh_Federal_DEA_Schedule = compound1Match.Groups["Seventh_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Seventh_FDA_Drug_Efficacy_Code = compound1Match.Groups["Seventh_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Seventh_Product_Code_Qualifier1 = compound1Match.Groups["Seventh_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Seventh_Product_Code1 = compound1Match.Groups["Seventh_Product_Code1"].Value.Trim();
                        hc1.Seventh_Product_Code_Qualifier2 = compound1Match.Groups["Seventh_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Seventh_Product_Code2 = compound1Match.Groups["Seventh_Product_Code2"].Value.Trim();
                        hc1.Seventh_Product_Code_Qualifier3 = compound1Match.Groups["Seventh_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Seventh_Product_Code3 = compound1Match.Groups["Seventh_Product_Code3"].Value.Trim();
                        hc1.Seventh_Federal_Upper_Limit_Indicator = compound1Match.Groups["Seventh_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Seventh_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code1 = compound1Match.Groups["Seventh_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Seventh_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code2 = compound1Match.Groups["Seventh_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Seventh_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code3 = compound1Match.Groups["Seventh_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Seventh_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Seventh_Therapeutic_Class_Code4 = compound1Match.Groups["Seventh_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Seventh_Special_Packaging_Indicator = compound1Match.Groups["Seventh_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Seventh_Unit_Of_Measure = compound1Match.Groups["Seventh_Unit_Of_Measure"].Value.Trim();
                        hc1.Seventh_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Seventh_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Seventh_MAC_Reduced_Indicator = compound1Match.Groups["Seventh_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Seventh_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Seventh_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Seventh_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Seventh_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Seventh_DUR_Coagent_ID = compound1Match.Groups["Seventh_DUR_Coagent_ID"].Value.Trim();
                        hc1.Seventh_Generic_Indicator = compound1Match.Groups["Seventh_Generic_Indicator"].Value.Trim();
                        hc1.Seventh_Plan_Cutback_Reason_Code = compound1Match.Groups["Seventh_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Seventh_Therapeutic_Chapter = compound1Match.Groups["Seventh_Therapeutic_Chapter"].Value.Trim();
                        hc1.Seventh_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Seventh_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Seventh_Average_Generic_Unit_Price = compound1Match.Groups["Seventh_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Seventh_Average_Wholesale_Unit_Price = compound1Match.Groups["Seventh_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Seventh_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Seventh_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Seventh_MAC_Price = compound1Match.Groups["Seventh_MAC_Price"].Value.Trim();
                        hc1.Seventh_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Seventh_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Seventh_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Seventh_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.Eighth_Compound_ID_Qualifier = compound1Match.Groups["Eighth_Compound_ID_Qualifier"].Value.Trim();
                        hc1.Eighth_Compound_ID = compound1Match.Groups["Eighth_Compound_ID"].Value.Trim();
                        hc1.Eighth_Compound_Ingredient_Quantity = compound1Match.Groups["Eighth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc1.Eighth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Eighth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc1.Eighth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Eighth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc1.Eighth_Client_Formulary_Flag = compound1Match.Groups["Eighth_Client_Formulary_Flag"].Value.Trim();
                        hc1.Eighth_Product_Name = compound1Match.Groups["Eighth_Product_Name"].Value.Trim();
                        hc1.Eighth_Generic_Name = compound1Match.Groups["Eighth_Generic_Name"].Value.Trim();
                        hc1.Eighth_Product_Strength = compound1Match.Groups["Eighth_Product_Strength"].Value.Trim();
                        hc1.Eighth_Dosage_Form_Code = compound1Match.Groups["Eighth_Dosage_Form_Code"].Value.Trim();
                        hc1.Eighth_Database_Indicator = compound1Match.Groups["Eighth_Database_Indicator"].Value.Trim();
                        hc1.Eighth_Drug_Type = compound1Match.Groups["Eighth_Drug_Type"].Value.Trim();
                        hc1.Eighth_Formulary_Status = compound1Match.Groups["Eighth_Formulary_Status"].Value.Trim();
                        hc1.Eighth_Drug_Category_Code = compound1Match.Groups["Eighth_Drug_Category_Code"].Value.Trim();
                        hc1.Eighth_Federal_DEA_Schedule = compound1Match.Groups["Eighth_Federal_DEA_Schedule"].Value.Trim();
                        hc1.Eighth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Eighth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc1.Eighth_Product_Code_Qualifier1 = compound1Match.Groups["Eighth_Product_Code_Qualifier1"].Value.Trim();
                        hc1.Eighth_Product_Code1 = compound1Match.Groups["Eighth_Product_Code1"].Value.Trim();
                        hc1.Eighth_Product_Code_Qualifier2 = compound1Match.Groups["Eighth_Product_Code_Qualifier2"].Value.Trim();
                        hc1.Eighth_Product_Code2 = compound1Match.Groups["Eighth_Product_Code2"].Value.Trim();
                        hc1.Eighth_Product_Code_Qualifier3 = compound1Match.Groups["Eighth_Product_Code_Qualifier3"].Value.Trim();
                        hc1.Eighth_Product_Code3 = compound1Match.Groups["Eighth_Product_Code3"].Value.Trim();
                        hc1.Eighth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Eighth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Eighth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code1 = compound1Match.Groups["Eighth_Therapeutic_Class_Code1"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Eighth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code2 = compound1Match.Groups["Eighth_Therapeutic_Class_Code2"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Eighth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code3 = compound1Match.Groups["Eighth_Therapeutic_Class_Code3"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Eighth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc1.Eighth_Therapeutic_Class_Code4 = compound1Match.Groups["Eighth_Therapeutic_Class_Code4"].Value.Trim();
                        hc1.Eighth_Special_Packaging_Indicator = compound1Match.Groups["Eighth_Special_Packaging_Indicator"].Value.Trim();
                        hc1.Eighth_Unit_Of_Measure = compound1Match.Groups["Eighth_Unit_Of_Measure"].Value.Trim();
                        hc1.Eighth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Eighth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc1.Eighth_MAC_Reduced_Indicator = compound1Match.Groups["Eighth_MAC_Reduced_Indicator"].Value.Trim();
                        hc1.Eighth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Eighth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc1.Eighth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Eighth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc1.Eighth_DUR_Coagent_ID = compound1Match.Groups["Eighth_DUR_Coagent_ID"].Value.Trim();
                        hc1.Eighth_Generic_Indicator = compound1Match.Groups["Eighth_Generic_Indicator"].Value.Trim();
                        hc1.Eighth_Plan_Cutback_Reason_Code = compound1Match.Groups["Eighth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc1.Eighth_Therapeutic_Chapter = compound1Match.Groups["Eighth_Therapeutic_Chapter"].Value.Trim();
                        hc1.Eighth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Eighth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc1.Eighth_Average_Generic_Unit_Price = compound1Match.Groups["Eighth_Average_Generic_Unit_Price"].Value.Trim();
                        hc1.Eighth_Average_Wholesale_Unit_Price = compound1Match.Groups["Eighth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc1.Eighth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Eighth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc1.Eighth_MAC_Price = compound1Match.Groups["Eighth_MAC_Price"].Value.Trim();
                        hc1.Eighth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Eighth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc1.Eighth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Eighth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc1.AddedDate = DateTime.Now;
                        DataAccess.SaveHisCompound1(ref hc1);
                        continue;
                    }
                    Match compound2Match = oRxParse_Compound2.Match(line);
                    if (compound2Match.Success)
                    {
                        HisCompound2 hc2 = new HisCompound2();
                        hc2.DetailID = DetailID;
                        hc2.RecordType = "CE";
                        hc2.Prescription_Reference_Number_Qualifier = compound2Match.Groups["Prescription_Reference_Number_Qualifier"].Value.Trim();
                        hc2.Prescription_Reference_Number = compound2Match.Groups["Prescription_Reference_Number"].Value.Trim();
                        hc2.Compound_Ingredient_Component_Count = compound2Match.Groups["Compound_Ingredient_Component_Count"].Value.Trim();
                        hc2.Ninth_Compound_ID_Qualifier = compound1Match.Groups["Ninth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Ninth_Compound_ID = compound1Match.Groups["Ninth_Compound_ID"].Value.Trim();
                        hc2.Ninth_Compound_Ingredient_Quantity = compound1Match.Groups["Ninth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Ninth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Ninth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Ninth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Ninth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Ninth_Client_Formulary_Flag = compound1Match.Groups["Ninth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Ninth_Product_Name = compound1Match.Groups["Ninth_Product_Name"].Value.Trim();
                        hc2.Ninth_Generic_Name = compound1Match.Groups["Ninth_Generic_Name"].Value.Trim();
                        hc2.Ninth_Product_Strength = compound1Match.Groups["Ninth_Product_Strength"].Value.Trim();
                        hc2.Ninth_Dosage_Form_Code = compound1Match.Groups["Ninth_Dosage_Form_Code"].Value.Trim();
                        hc2.Ninth_Database_Indicator = compound1Match.Groups["Ninth_Database_Indicator"].Value.Trim();
                        hc2.Ninth_Drug_Type = compound1Match.Groups["Ninth_Drug_Type"].Value.Trim();
                        hc2.Ninth_Formulary_Status = compound1Match.Groups["Ninth_Formulary_Status"].Value.Trim();
                        hc2.Ninth_Drug_Category_Code = compound1Match.Groups["Ninth_Drug_Category_Code"].Value.Trim();
                        hc2.Ninth_Federal_DEA_Schedule = compound1Match.Groups["Ninth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Ninth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Ninth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Ninth_Product_Code_Qualifier1 = compound1Match.Groups["Ninth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Ninth_Product_Code1 = compound1Match.Groups["Ninth_Product_Code1"].Value.Trim();
                        hc2.Ninth_Product_Code_Qualifier2 = compound1Match.Groups["Ninth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Ninth_Product_Code2 = compound1Match.Groups["Ninth_Product_Code2"].Value.Trim();
                        hc2.Ninth_Product_Code_Qualifier3 = compound1Match.Groups["Ninth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Ninth_Product_Code3 = compound1Match.Groups["Ninth_Product_Code3"].Value.Trim();
                        hc2.Ninth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Ninth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Ninth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code1 = compound1Match.Groups["Ninth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Ninth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code2 = compound1Match.Groups["Ninth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Ninth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code3 = compound1Match.Groups["Ninth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Ninth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Ninth_Therapeutic_Class_Code4 = compound1Match.Groups["Ninth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Ninth_Special_Packaging_Indicator = compound1Match.Groups["Ninth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Ninth_Unit_Of_Measure = compound1Match.Groups["Ninth_Unit_Of_Measure"].Value.Trim();
                        hc2.Ninth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Ninth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Ninth_MAC_Reduced_Indicator = compound1Match.Groups["Ninth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Ninth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Ninth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Ninth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Ninth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Ninth_DUR_Coagent_ID = compound1Match.Groups["Ninth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Ninth_Generic_Indicator = compound1Match.Groups["Ninth_Generic_Indicator"].Value.Trim();
                        hc2.Ninth_Plan_Cutback_Reason_Code = compound1Match.Groups["Ninth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Ninth_Therapeutic_Chapter = compound1Match.Groups["Ninth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Ninth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Ninth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Ninth_Average_Generic_Unit_Price = compound1Match.Groups["Ninth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Ninth_Average_Wholesale_Unit_Price = compound1Match.Groups["Ninth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Ninth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Ninth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Ninth_MAC_Price = compound1Match.Groups["Ninth_MAC_Price"].Value.Trim();
                        hc2.Ninth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Ninth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Ninth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Ninth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Tenth_Compound_ID_Qualifier = compound1Match.Groups["Tenth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Tenth_Compound_ID = compound1Match.Groups["Tenth_Compound_ID"].Value.Trim();
                        hc2.Tenth_Compound_Ingredient_Quantity = compound1Match.Groups["Tenth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Tenth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Tenth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Tenth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Tenth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Tenth_Client_Formulary_Flag = compound1Match.Groups["Tenth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Tenth_Product_Name = compound1Match.Groups["Tenth_Product_Name"].Value.Trim();
                        hc2.Tenth_Generic_Name = compound1Match.Groups["Tenth_Generic_Name"].Value.Trim();
                        hc2.Tenth_Product_Strength = compound1Match.Groups["Tenth_Product_Strength"].Value.Trim();
                        hc2.Tenth_Dosage_Form_Code = compound1Match.Groups["Tenth_Dosage_Form_Code"].Value.Trim();
                        hc2.Tenth_Database_Indicator = compound1Match.Groups["Tenth_Database_Indicator"].Value.Trim();
                        hc2.Tenth_Drug_Type = compound1Match.Groups["Tenth_Drug_Type"].Value.Trim();
                        hc2.Tenth_Formulary_Status = compound1Match.Groups["Tenth_Formulary_Status"].Value.Trim();
                        hc2.Tenth_Drug_Category_Code = compound1Match.Groups["Tenth_Drug_Category_Code"].Value.Trim();
                        hc2.Tenth_Federal_DEA_Schedule = compound1Match.Groups["Tenth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Tenth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Tenth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Tenth_Product_Code_Qualifier1 = compound1Match.Groups["Tenth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Tenth_Product_Code1 = compound1Match.Groups["Tenth_Product_Code1"].Value.Trim();
                        hc2.Tenth_Product_Code_Qualifier2 = compound1Match.Groups["Tenth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Tenth_Product_Code2 = compound1Match.Groups["Tenth_Product_Code2"].Value.Trim();
                        hc2.Tenth_Product_Code_Qualifier3 = compound1Match.Groups["Tenth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Tenth_Product_Code3 = compound1Match.Groups["Tenth_Product_Code3"].Value.Trim();
                        hc2.Tenth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Tenth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Tenth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code1 = compound1Match.Groups["Tenth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Tenth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code2 = compound1Match.Groups["Tenth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Tenth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code3 = compound1Match.Groups["Tenth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Tenth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Tenth_Therapeutic_Class_Code4 = compound1Match.Groups["Tenth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Tenth_Special_Packaging_Indicator = compound1Match.Groups["Tenth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Tenth_Unit_Of_Measure = compound1Match.Groups["Tenth_Unit_Of_Measure"].Value.Trim();
                        hc2.Tenth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Tenth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Tenth_MAC_Reduced_Indicator = compound1Match.Groups["Tenth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Tenth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Tenth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Tenth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Tenth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Tenth_DUR_Coagent_ID = compound1Match.Groups["Tenth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Tenth_Generic_Indicator = compound1Match.Groups["Tenth_Generic_Indicator"].Value.Trim();
                        hc2.Tenth_Plan_Cutback_Reason_Code = compound1Match.Groups["Tenth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Tenth_Therapeutic_Chapter = compound1Match.Groups["Tenth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Tenth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Tenth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Tenth_Average_Generic_Unit_Price = compound1Match.Groups["Tenth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Tenth_Average_Wholesale_Unit_Price = compound1Match.Groups["Tenth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Tenth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Tenth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Tenth_MAC_Price = compound1Match.Groups["Tenth_MAC_Price"].Value.Trim();
                        hc2.Tenth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Tenth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Tenth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Tenth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Eleventh_Compound_ID_Qualifier = compound1Match.Groups["Eleventh_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Eleventh_Compound_ID = compound1Match.Groups["Eleventh_Compound_ID"].Value.Trim();
                        hc2.Eleventh_Compound_Ingredient_Quantity = compound1Match.Groups["Eleventh_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Eleventh_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Eleventh_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Eleventh_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Eleventh_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Eleventh_Client_Formulary_Flag = compound1Match.Groups["Eleventh_Client_Formulary_Flag"].Value.Trim();
                        hc2.Eleventh_Product_Name = compound1Match.Groups["Eleventh_Product_Name"].Value.Trim();
                        hc2.Eleventh_Generic_Name = compound1Match.Groups["Eleventh_Generic_Name"].Value.Trim();
                        hc2.Eleventh_Product_Strength = compound1Match.Groups["Eleventh_Product_Strength"].Value.Trim();
                        hc2.Eleventh_Dosage_Form_Code = compound1Match.Groups["Eleventh_Dosage_Form_Code"].Value.Trim();
                        hc2.Eleventh_Database_Indicator = compound1Match.Groups["Eleventh_Database_Indicator"].Value.Trim();
                        hc2.Eleventh_Drug_Type = compound1Match.Groups["Eleventh_Drug_Type"].Value.Trim();
                        hc2.Eleventh_Formulary_Status = compound1Match.Groups["Eleventh_Formulary_Status"].Value.Trim();
                        hc2.Eleventh_Drug_Category_Code = compound1Match.Groups["Eleventh_Drug_Category_Code"].Value.Trim();
                        hc2.Eleventh_Federal_DEA_Schedule = compound1Match.Groups["Eleventh_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Eleventh_FDA_Drug_Efficacy_Code = compound1Match.Groups["Eleventh_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Eleventh_Product_Code_Qualifier1 = compound1Match.Groups["Eleventh_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Eleventh_Product_Code1 = compound1Match.Groups["Eleventh_Product_Code1"].Value.Trim();
                        hc2.Eleventh_Product_Code_Qualifier2 = compound1Match.Groups["Eleventh_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Eleventh_Product_Code2 = compound1Match.Groups["Eleventh_Product_Code2"].Value.Trim();
                        hc2.Eleventh_Product_Code_Qualifier3 = compound1Match.Groups["Eleventh_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Eleventh_Product_Code3 = compound1Match.Groups["Eleventh_Product_Code3"].Value.Trim();
                        hc2.Eleventh_Federal_Upper_Limit_Indicator = compound1Match.Groups["Eleventh_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code1 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code2 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code3 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Class_Code4 = compound1Match.Groups["Eleventh_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Eleventh_Special_Packaging_Indicator = compound1Match.Groups["Eleventh_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Eleventh_Unit_Of_Measure = compound1Match.Groups["Eleventh_Unit_Of_Measure"].Value.Trim();
                        hc2.Eleventh_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Eleventh_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Eleventh_MAC_Reduced_Indicator = compound1Match.Groups["Eleventh_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Eleventh_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Eleventh_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Eleventh_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Eleventh_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Eleventh_DUR_Coagent_ID = compound1Match.Groups["Eleventh_DUR_Coagent_ID"].Value.Trim();
                        hc2.Eleventh_Generic_Indicator = compound1Match.Groups["Eleventh_Generic_Indicator"].Value.Trim();
                        hc2.Eleventh_Plan_Cutback_Reason_Code = compound1Match.Groups["Eleventh_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Eleventh_Therapeutic_Chapter = compound1Match.Groups["Eleventh_Therapeutic_Chapter"].Value.Trim();
                        hc2.Eleventh_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Eleventh_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Eleventh_Average_Generic_Unit_Price = compound1Match.Groups["Eleventh_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Eleventh_Average_Wholesale_Unit_Price = compound1Match.Groups["Eleventh_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Eleventh_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Eleventh_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Eleventh_MAC_Price = compound1Match.Groups["Eleventh_MAC_Price"].Value.Trim();
                        hc2.Eleventh_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Eleventh_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Eleventh_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Eleventh_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Twelfth_Compound_ID_Qualifier = compound1Match.Groups["Twelfth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Twelfth_Compound_ID = compound1Match.Groups["Twelfth_Compound_ID"].Value.Trim();
                        hc2.Twelfth_Compound_Ingredient_Quantity = compound1Match.Groups["Twelfth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Twelfth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Twelfth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Twelfth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Twelfth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Twelfth_Client_Formulary_Flag = compound1Match.Groups["Twelfth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Twelfth_Product_Name = compound1Match.Groups["Twelfth_Product_Name"].Value.Trim();
                        hc2.Twelfth_Generic_Name = compound1Match.Groups["Twelfth_Generic_Name"].Value.Trim();
                        hc2.Twelfth_Product_Strength = compound1Match.Groups["Twelfth_Product_Strength"].Value.Trim();
                        hc2.Twelfth_Dosage_Form_Code = compound1Match.Groups["Twelfth_Dosage_Form_Code"].Value.Trim();
                        hc2.Twelfth_Database_Indicator = compound1Match.Groups["Twelfth_Database_Indicator"].Value.Trim();
                        hc2.Twelfth_Drug_Type = compound1Match.Groups["Twelfth_Drug_Type"].Value.Trim();
                        hc2.Twelfth_Formulary_Status = compound1Match.Groups["Twelfth_Formulary_Status"].Value.Trim();
                        hc2.Twelfth_Drug_Category_Code = compound1Match.Groups["Twelfth_Drug_Category_Code"].Value.Trim();
                        hc2.Twelfth_Federal_DEA_Schedule = compound1Match.Groups["Twelfth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Twelfth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Twelfth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Twelfth_Product_Code_Qualifier1 = compound1Match.Groups["Twelfth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Twelfth_Product_Code1 = compound1Match.Groups["Twelfth_Product_Code1"].Value.Trim();
                        hc2.Twelfth_Product_Code_Qualifier2 = compound1Match.Groups["Twelfth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Twelfth_Product_Code2 = compound1Match.Groups["Twelfth_Product_Code2"].Value.Trim();
                        hc2.Twelfth_Product_Code_Qualifier3 = compound1Match.Groups["Twelfth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Twelfth_Product_Code3 = compound1Match.Groups["Twelfth_Product_Code3"].Value.Trim();
                        hc2.Twelfth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Twelfth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code1 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code2 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code3 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Class_Code4 = compound1Match.Groups["Twelfth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Twelfth_Special_Packaging_Indicator = compound1Match.Groups["Twelfth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Twelfth_Unit_Of_Measure = compound1Match.Groups["Twelfth_Unit_Of_Measure"].Value.Trim();
                        hc2.Twelfth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Twelfth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Twelfth_MAC_Reduced_Indicator = compound1Match.Groups["Twelfth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Twelfth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Twelfth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Twelfth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Twelfth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Twelfth_DUR_Coagent_ID = compound1Match.Groups["Twelfth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Twelfth_Generic_Indicator = compound1Match.Groups["Twelfth_Generic_Indicator"].Value.Trim();
                        hc2.Twelfth_Plan_Cutback_Reason_Code = compound1Match.Groups["Twelfth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Twelfth_Therapeutic_Chapter = compound1Match.Groups["Twelfth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Twelfth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Twelfth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Twelfth_Average_Generic_Unit_Price = compound1Match.Groups["Twelfth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Twelfth_Average_Wholesale_Unit_Price = compound1Match.Groups["Twelfth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Twelfth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Twelfth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Twelfth_MAC_Price = compound1Match.Groups["Twelfth_MAC_Price"].Value.Trim();
                        hc2.Twelfth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Twelfth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Twelfth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Twelfth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Thirteenth_Compound_ID_Qualifier = compound1Match.Groups["Thirteenth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Thirteenth_Compound_ID = compound1Match.Groups["Thirteenth_Compound_ID"].Value.Trim();
                        hc2.Thirteenth_Compound_Ingredient_Quantity = compound1Match.Groups["Thirteenth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Thirteenth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Thirteenth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Thirteenth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Thirteenth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Thirteenth_Client_Formulary_Flag = compound1Match.Groups["Thirteenth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Thirteenth_Product_Name = compound1Match.Groups["Thirteenth_Product_Name"].Value.Trim();
                        hc2.Thirteenth_Generic_Name = compound1Match.Groups["Thirteenth_Generic_Name"].Value.Trim();
                        hc2.Thirteenth_Product_Strength = compound1Match.Groups["Thirteenth_Product_Strength"].Value.Trim();
                        hc2.Thirteenth_Dosage_Form_Code = compound1Match.Groups["Thirteenth_Dosage_Form_Code"].Value.Trim();
                        hc2.Thirteenth_Database_Indicator = compound1Match.Groups["Thirteenth_Database_Indicator"].Value.Trim();
                        hc2.Thirteenth_Drug_Type = compound1Match.Groups["Thirteenth_Drug_Type"].Value.Trim();
                        hc2.Thirteenth_Formulary_Status = compound1Match.Groups["Thirteenth_Formulary_Status"].Value.Trim();
                        hc2.Thirteenth_Drug_Category_Code = compound1Match.Groups["Thirteenth_Drug_Category_Code"].Value.Trim();
                        hc2.Thirteenth_Federal_DEA_Schedule = compound1Match.Groups["Thirteenth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Thirteenth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Thirteenth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Thirteenth_Product_Code_Qualifier1 = compound1Match.Groups["Thirteenth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Thirteenth_Product_Code1 = compound1Match.Groups["Thirteenth_Product_Code1"].Value.Trim();
                        hc2.Thirteenth_Product_Code_Qualifier2 = compound1Match.Groups["Thirteenth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Thirteenth_Product_Code2 = compound1Match.Groups["Thirteenth_Product_Code2"].Value.Trim();
                        hc2.Thirteenth_Product_Code_Qualifier3 = compound1Match.Groups["Thirteenth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Thirteenth_Product_Code3 = compound1Match.Groups["Thirteenth_Product_Code3"].Value.Trim();
                        hc2.Thirteenth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Thirteenth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code1 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code2 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code3 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Class_Code4 = compound1Match.Groups["Thirteenth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Thirteenth_Special_Packaging_Indicator = compound1Match.Groups["Thirteenth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Thirteenth_Unit_Of_Measure = compound1Match.Groups["Thirteenth_Unit_Of_Measure"].Value.Trim();
                        hc2.Thirteenth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Thirteenth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Thirteenth_MAC_Reduced_Indicator = compound1Match.Groups["Thirteenth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Thirteenth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Thirteenth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Thirteenth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Thirteenth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Thirteenth_DUR_Coagent_ID = compound1Match.Groups["Thirteenth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Thirteenth_Generic_Indicator = compound1Match.Groups["Thirteenth_Generic_Indicator"].Value.Trim();
                        hc2.Thirteenth_Plan_Cutback_Reason_Code = compound1Match.Groups["Thirteenth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Thirteenth_Therapeutic_Chapter = compound1Match.Groups["Thirteenth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Thirteenth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Thirteenth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Thirteenth_Average_Generic_Unit_Price = compound1Match.Groups["Thirteenth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Thirteenth_Average_Wholesale_Unit_Price = compound1Match.Groups["Thirteenth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Thirteenth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Thirteenth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Thirteenth_MAC_Price = compound1Match.Groups["Thirteenth_MAC_Price"].Value.Trim();
                        hc2.Thirteenth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Thirteenth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Thirteenth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Thirteenth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Fourteenth_Compound_ID_Qualifier = compound1Match.Groups["Fourteenth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Fourteenth_Compound_ID = compound1Match.Groups["Fourteenth_Compound_ID"].Value.Trim();
                        hc2.Fourteenth_Compound_Ingredient_Quantity = compound1Match.Groups["Fourteenth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Fourteenth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Fourteenth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Fourteenth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Fourteenth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Fourteenth_Client_Formulary_Flag = compound1Match.Groups["Fourteenth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Fourteenth_Product_Name = compound1Match.Groups["Fourteenth_Product_Name"].Value.Trim();
                        hc2.Fourteenth_Generic_Name = compound1Match.Groups["Fourteenth_Generic_Name"].Value.Trim();
                        hc2.Fourteenth_Product_Strength = compound1Match.Groups["Fourteenth_Product_Strength"].Value.Trim();
                        hc2.Fourteenth_Dosage_Form_Code = compound1Match.Groups["Fourteenth_Dosage_Form_Code"].Value.Trim();
                        hc2.Fourteenth_Database_Indicator = compound1Match.Groups["Fourteenth_Database_Indicator"].Value.Trim();
                        hc2.Fourteenth_Drug_Type = compound1Match.Groups["Fourteenth_Drug_Type"].Value.Trim();
                        hc2.Fourteenth_Formulary_Status = compound1Match.Groups["Fourteenth_Formulary_Status"].Value.Trim();
                        hc2.Fourteenth_Drug_Category_Code = compound1Match.Groups["Fourteenth_Drug_Category_Code"].Value.Trim();
                        hc2.Fourteenth_Federal_DEA_Schedule = compound1Match.Groups["Fourteenth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Fourteenth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Fourteenth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Fourteenth_Product_Code_Qualifier1 = compound1Match.Groups["Fourteenth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Fourteenth_Product_Code1 = compound1Match.Groups["Fourteenth_Product_Code1"].Value.Trim();
                        hc2.Fourteenth_Product_Code_Qualifier2 = compound1Match.Groups["Fourteenth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Fourteenth_Product_Code2 = compound1Match.Groups["Fourteenth_Product_Code2"].Value.Trim();
                        hc2.Fourteenth_Product_Code_Qualifier3 = compound1Match.Groups["Fourteenth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Fourteenth_Product_Code3 = compound1Match.Groups["Fourteenth_Product_Code3"].Value.Trim();
                        hc2.Fourteenth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Fourteenth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code1 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code2 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code3 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Class_Code4 = compound1Match.Groups["Fourteenth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Fourteenth_Special_Packaging_Indicator = compound1Match.Groups["Fourteenth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Fourteenth_Unit_Of_Measure = compound1Match.Groups["Fourteenth_Unit_Of_Measure"].Value.Trim();
                        hc2.Fourteenth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Fourteenth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Fourteenth_MAC_Reduced_Indicator = compound1Match.Groups["Fourteenth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Fourteenth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Fourteenth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Fourteenth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Fourteenth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Fourteenth_DUR_Coagent_ID = compound1Match.Groups["Fourteenth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Fourteenth_Generic_Indicator = compound1Match.Groups["Fourteenth_Generic_Indicator"].Value.Trim();
                        hc2.Fourteenth_Plan_Cutback_Reason_Code = compound1Match.Groups["Fourteenth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Fourteenth_Therapeutic_Chapter = compound1Match.Groups["Fourteenth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Fourteenth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Fourteenth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Fourteenth_Average_Generic_Unit_Price = compound1Match.Groups["Fourteenth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Fourteenth_Average_Wholesale_Unit_Price = compound1Match.Groups["Fourteenth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Fourteenth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Fourteenth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Fourteenth_MAC_Price = compound1Match.Groups["Fourteenth_MAC_Price"].Value.Trim();
                        hc2.Fourteenth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Fourteenth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Fourteenth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Fourteenth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.Fifteenth_Compound_ID_Qualifier = compound1Match.Groups["Fifteenth_Compound_ID_Qualifier"].Value.Trim();
                        hc2.Fifteenth_Compound_ID = compound1Match.Groups["Fifteenth_Compound_ID"].Value.Trim();
                        hc2.Fifteenth_Compound_Ingredient_Quantity = compound1Match.Groups["Fifteenth_Compound_Ingredient_Quantity"].Value.Trim();
                        hc2.Fifteenth_Compound_Ingredient_Drug_Cost = compound1Match.Groups["Fifteenth_Compound_Ingredient_Drug_Cost"].Value.Trim();
                        hc2.Fifteenth_Compound_ingredient_Basis_Of_Cost_Determination = compound1Match.Groups["Fifteenth_Compound_ingredient_Basis_Of_Cost_Determination"].Value.Trim();
                        hc2.Fifteenth_Client_Formulary_Flag = compound1Match.Groups["Fifteenth_Client_Formulary_Flag"].Value.Trim();
                        hc2.Fifteenth_Product_Name = compound1Match.Groups["Fifteenth_Product_Name"].Value.Trim();
                        hc2.Fifteenth_Generic_Name = compound1Match.Groups["Fifteenth_Generic_Name"].Value.Trim();
                        hc2.Fifteenth_Product_Strength = compound1Match.Groups["Fifteenth_Product_Strength"].Value.Trim();
                        hc2.Fifteenth_Dosage_Form_Code = compound1Match.Groups["Fifteenth_Dosage_Form_Code"].Value.Trim();
                        hc2.Fifteenth_Database_Indicator = compound1Match.Groups["Fifteenth_Database_Indicator"].Value.Trim();
                        hc2.Fifteenth_Drug_Type = compound1Match.Groups["Fifteenth_Drug_Type"].Value.Trim();
                        hc2.Fifteenth_Formulary_Status = compound1Match.Groups["Fifteenth_Formulary_Status"].Value.Trim();
                        hc2.Fifteenth_Drug_Category_Code = compound1Match.Groups["Fifteenth_Drug_Category_Code"].Value.Trim();
                        hc2.Fifteenth_Federal_DEA_Schedule = compound1Match.Groups["Fifteenth_Federal_DEA_Schedule"].Value.Trim();
                        hc2.Fifteenth_FDA_Drug_Efficacy_Code = compound1Match.Groups["Fifteenth_FDA_Drug_Efficacy_Code"].Value.Trim();
                        hc2.Fifteenth_Product_Code_Qualifier1 = compound1Match.Groups["Fifteenth_Product_Code_Qualifier1"].Value.Trim();
                        hc2.Fifteenth_Product_Code1 = compound1Match.Groups["Fifteenth_Product_Code1"].Value.Trim();
                        hc2.Fifteenth_Product_Code_Qualifier2 = compound1Match.Groups["Fifteenth_Product_Code_Qualifier2"].Value.Trim();
                        hc2.Fifteenth_Product_Code2 = compound1Match.Groups["Fifteenth_Product_Code2"].Value.Trim();
                        hc2.Fifteenth_Product_Code_Qualifier3 = compound1Match.Groups["Fifteenth_Product_Code_Qualifier3"].Value.Trim();
                        hc2.Fifteenth_Product_Code3 = compound1Match.Groups["Fifteenth_Product_Code3"].Value.Trim();
                        hc2.Fifteenth_Federal_Upper_Limit_Indicator = compound1Match.Groups["Fifteenth_Federal_Upper_Limit_Indicator"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code_Qualifier1 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code_Qualifier1"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code1 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code1"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code_Qualifier2 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code_Qualifier2"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code2 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code2"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code_Qualifier3 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code_Qualifier3"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code3 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code3"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code_Qualifier4 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code_Qualifier4"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Class_Code4 = compound1Match.Groups["Fifteenth_Therapeutic_Class_Code4"].Value.Trim();
                        hc2.Fifteenth_Special_Packaging_Indicator = compound1Match.Groups["Fifteenth_Special_Packaging_Indicator"].Value.Trim();
                        hc2.Fifteenth_Unit_Of_Measure = compound1Match.Groups["Fifteenth_Unit_Of_Measure"].Value.Trim();
                        hc2.Fifteenth_Processor_Defined_Prior_Authorization_Reason_Code = compound1Match.Groups["Fifteenth_Processor_Defined_Prior_Authorization_Reason_Code"].Value.Trim();
                        hc2.Fifteenth_MAC_Reduced_Indicator = compound1Match.Groups["Fifteenth_MAC_Reduced_Indicator"].Value.Trim();
                        hc2.Fifteenth_Client_Pricing_Basis_Of_Cost = compound1Match.Groups["Fifteenth_Client_Pricing_Basis_Of_Cost"].Value.Trim();
                        hc2.Fifteenth_DUR_Coagent_ID_Qualifier = compound1Match.Groups["Fifteenth_DUR_Coagent_ID_Qualifier"].Value.Trim();
                        hc2.Fifteenth_DUR_Coagent_ID = compound1Match.Groups["Fifteenth_DUR_Coagent_ID"].Value.Trim();
                        hc2.Fifteenth_Generic_Indicator = compound1Match.Groups["Fifteenth_Generic_Indicator"].Value.Trim();
                        hc2.Fifteenth_Plan_Cutback_Reason_Code = compound1Match.Groups["Fifteenth_Plan_Cutback_Reason_Code"].Value.Trim();
                        hc2.Fifteenth_Therapeutic_Chapter = compound1Match.Groups["Fifteenth_Therapeutic_Chapter"].Value.Trim();
                        hc2.Fifteenth_Average_Cost_Per_Quantity_Unit_Price = compound1Match.Groups["Fifteenth_Average_Cost_Per_Quantity_Unit_Price"].Value.Trim();
                        hc2.Fifteenth_Average_Generic_Unit_Price = compound1Match.Groups["Fifteenth_Average_Generic_Unit_Price"].Value.Trim();
                        hc2.Fifteenth_Average_Wholesale_Unit_Price = compound1Match.Groups["Fifteenth_Average_Wholesale_Unit_Price"].Value.Trim();
                        hc2.Fifteenth_Federal_Upper_Limit_Unit_Price = compound1Match.Groups["Fifteenth_Federal_Upper_Limit_Unit_Price"].Value.Trim();
                        hc2.Fifteenth_MAC_Price = compound1Match.Groups["Fifteenth_MAC_Price"].Value.Trim();
                        hc2.Fifteenth_Basis_Of_Reimbursement_Determination = compound1Match.Groups["Fifteenth_Basis_Of_Reimbursement_Determination"].Value.Trim();
                        hc2.Fifteenth_Patient_Formulary_Rebate_Amount = compound1Match.Groups["Fifteenth_Patient_Formulary_Rebate_Amount"].Value.Trim();
                        hc2.AddedDate = DateTime.Now;
                        DataAccess.SaveHisCompound2(ref hc2);
                        continue;
                    }
                    Match trailMatch = oRxParse_Trailer.Match(line);
                    if (trailMatch.Success)
                    {
                        HisHeader hh = new HisHeader();
                        hh.FileID = FileHeaderID;
                        hh.Total_Record_Count = trailMatch.Groups["Total_Record_Count"].Value.Trim();
                        hh.Total_Net_Amount_Due = trailMatch.Groups["Total_Net_Amount_Due"].Value.Trim();
                        hh.Total_Gross_Amount_Due = trailMatch.Groups["Total_Gross_Amount_Due"].Value.Trim();
                        hh.Total_Patient_Pay_Amount = trailMatch.Groups["Total_Patient_Pay_Amount"].Value.Trim();
                        DataAccess.UpdateHisHeader(hh);
                    }
                }
                sr.Close();
                sr.Dispose();
            }
            return 1;
        }

    }
}
